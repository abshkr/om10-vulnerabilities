<?xml version="1.0" encoding="utf-8"?>
<s:ComboBox xmlns:fx="http://ns.adobe.com/mxml/2009"  
			xmlns:s="library://ns.adobe.com/flex/spark" 
			xmlns:mx="library://ns.adobe.com/flex/mx" minHeight="24" useVirtualLayout="false"
			skinClass="skins.DKI_ComboBox_Skin">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			
			import spark.events.DropDownEvent;
			import spark.events.TextOperationEvent;
			
			private var unfilteredDataProvider : IList;
			public var isTextFieldReset:Boolean=true;
			
			override public function set dataProvider(value:IList):void 
			{
				super.dataProvider = value;
				unfilteredDataProvider = value;
			}
			
			override protected function textInput_changeHandler(event:TextOperationEvent):void 
			{
				super.textInput_changeHandler(event);
				if (unfilteredDataProvider.length > 0)
				{
					if (unfilteredDataProvider is ArrayCollection) 
					{
						ArrayCollection(unfilteredDataProvider).filterFunction = filterMatches;
						ArrayCollection(unfilteredDataProvider).refresh();
						super.dataProvider = new ArrayCollection(unfilteredDataProvider.toArray()); 
					}
				}
				else
				{
					if ( isTextFieldReset )
					{
						this.textInput.text='';
					}
					ArrayCollection(unfilteredDataProvider).filterFunction = null;
					ArrayCollection(unfilteredDataProvider).refresh();
				}
			}
			
			protected function filterMatches(item:Object):Boolean 
			{
				if (item is String) 
				{
					if(String(item).indexOf(
						textInput.text.slice(0,
							textInput.selectionAnchorPosition))>-1)
						return true;
				}
				else 
					if (labelField && labelField!= "")
					{
						if(item.hasOwnProperty(labelField) && 
							String(item[labelField]).indexOf(
								textInput.text.slice(0,
									textInput.selectionAnchorPosition))>-1)
							return true;
					}
				
				return false;
			}
			
		]]>
	</fx:Script>
</s:ComboBox>
