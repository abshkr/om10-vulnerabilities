<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="30"
		  borderVisible="false" backgroundAlpha="0.0" creationComplete="initComp()" xmlns:components="components.*">
	
	<fx:Script>
		<![CDATA[
			import dm.DM;
			
			import mx.core.BitmapAsset;
			import mx.events.CollectionEvent;
			
			[Embed (source="/assets/icons/sound_on.png")]
			[Bindable] public var soundOn:Class;
			
			[Embed (source="/assets/icons/sound_off.png")]
			[Bindable] public var soundOff:Class;
			
			private var soundOnObject:BitmapAsset = new soundOn() as BitmapAsset;
			private var soundOffObject:BitmapAsset = new soundOff() as BitmapAsset;
			
			var snd:Sound = new Sound(new URLRequest("assets/sounds/WarningSound.mp3")); 
			var schannel:SoundChannel=null;
			var sounded:Boolean=false;
			var isSoundOn:Boolean=false;
			
			private function initComp():void{
				global.messageList.addEventListener(CollectionEvent.COLLECTION_CHANGE, getColor);
				if(global.messageList.length>0){
					this.soundImg.source = this.soundOnObject;
					isSoundOn = true;
				}
				else {
					this.soundImg.source = this.soundOffObject;
					isSoundOn = false;
				}
				this.getSound();
			}
			private function showAlarmHistory():void{
				if(global.messageList.length>0){
					global.messageLimit=5;
					global.messageList.refresh();
				}
			}
			private function getColor(evt:CollectionEvent):void{
				if(global.messageList.length==0){
					alarmBox.setStyle('backgroundColor', 0x006600);
				}else{
					alarmBox.setStyle('backgroundColor', 0xFF0000);					
				}
				
				this.getSound();
			}
			
			private function msgCount_clickHandler():void
			{
				if ( global.messageList.length==0 )
				{
					 global.messageList.addItem( new Object());
				}
				else
				{
					global.messageList.removeAll();
				}
				//snd.close();
			}
			
			private function getSound():void{
				if(global.messageList.length==0){
					if ( schannel != null )
					{
						schannel.stop();
						sounded = false;
					}
				}else{
					if ( isSoundOn == true )
					{
						if ( sounded==false )
						{
							schannel = snd.play(0, 999);
							sounded = true;
						}
					}
					else
					{
						if ( schannel != null )
						{
							schannel.stop();
							sounded = false;
						}
					}
				}
			}
			
			private function soundImg_clickHandler():void
			{
				if( isSoundOn == false ){
					this.soundImg.source = this.soundOnObject;
					isSoundOn = true;
				}
				else {
					this.soundImg.source = this.soundOffObject;
					isSoundOn = false;
				}
				
				this.getSound();
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:DropShadowFilter id="drop" alpha="0.95" angle="60" blurX="10" blurY="10" color="0x000055" distance="5"/>
	</fx:Declarations>
	
	<s:Rect width="100%" height="1" alpha="0.7" horizontalCenter="0">
		<s:fill>
			<s:LinearGradient>
				<s:GradientEntry color="0xDDDDDD" alpha="0.1"/>
				<s:GradientEntry color="0xDDDDDD"/>
				<s:GradientEntry color="0xDDDDDD" alpha="0.1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:Label text="{resourceManager.getString('default','global.lbl.servertime')+': '+global.serverTime}" color="{global.OMLITE?0:0xFFFFFF}" fontWeight="bold" height="19" left="5" bottom="6" textAlign="left" verticalAlign="middle"/> 
	
	<s:BorderContainer id="notifications" width="140" height="19" right="260" bottom="6" buttonMode="true" useHandCursor="true"
					   backgroundColor="0x666600" cornerRadius="5" filters="{drop}" borderVisible="false" visible="{global.mcp2p}">
		<s:Label id="notificationsCount" width="100%" height="100%" color="0xFFFFFF" fontWeight="bold"
				 horizontalCenter="0" text="{resourceManager.getString('default','global.lbl.peernotes')+': '+DM.cumulusGroupNotifications.length}"
				 textAlign="center" verticalAlign="middle" verticalCenter="1"/>
	</s:BorderContainer>
	
	<s:BorderContainer id="peers" width="100" height="19" right="150" bottom="6" buttonMode="true" useHandCursor="true"
					   backgroundColor="0x999900" cornerRadius="5" filters="{drop}" borderVisible="false" visible="{global.mcp2p}">
		<s:Label id="peerCount" width="100%" height="100%" color="#FFFFFF" fontWeight="bold"
				 horizontalCenter="0" text="{resourceManager.getString('default','global.lbl.peers')+': '+DM.cumulusNeighbourCount}"
				 textAlign="center" verticalAlign="middle" verticalCenter="1"/>
	</s:BorderContainer>
	
	<s:BorderContainer id="alarmBox" width="100" height="19" right="40" bottom="6" buttonMode="true" click="showAlarmHistory()" useHandCursor="true"
			backgroundColor="0x006600" cornerRadius="5" filters="{drop}" borderVisible="false">
		<s:Label id="msgCount" width="100%" height="100%" color="#FFFFFF" fontWeight="bold"
				 horizontalCenter="0" text="{resourceManager.getString('default','global.lbl.warnings')+': '+global.messageList.length}"
				 textAlign="center" verticalAlign="middle" verticalCenter="1"/>
	</s:BorderContainer>	
	
	<s:Image id="soundImg" verticalCenter="0" width="24" height="24" right="5" useHandCursor="true" click="soundImg_clickHandler()"/>
	<!--<s:BorderContainer id="soundBox" width="24" height="24" right="10" bottom="6" buttonMode="true" useHandCursor="true"
					   backgroundColor="0x006600" cornerRadius="5" filters="{drop}" borderVisible="false">
	</s:BorderContainer>-->	
</s:BorderContainer>
