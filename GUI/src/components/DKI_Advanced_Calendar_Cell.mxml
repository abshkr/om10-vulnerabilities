<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" width="100%" height="100%" minHeight="35"
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		
		currentState="normal"
		
		backgroundAlpha="{_alpha}"
		
		
		backgroundColor       		 = "{_background}" 
		backgroundColor.disabled     = "{DARKGRAY}"
		
		
		
		mouseOver.normal   = "{_background = LIGHTGRAY;_alpha=1}" 
		mouseOut.normal    = "{_background = WHITE;_alpha = 0.65}"
		
	
		>
	<s:states>
		<s:State name="normal"/>
		<s:State name="invalidMonth"/>
		<s:State name="disabled"/>
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.conversion.TextConverter;
			
			import spark.utils.TextFlowUtil;
			
			public var calendar:DKI_Advanced_Calendar;
			
			
			
			[Bindable] private static var WHITE:uint         = 0xFFFFFF;
			[Bindable] private static var VERYLIGHTGRAY:uint = 0xEEEEEE;
			[Bindable] private static var LIGHTGRAY:uint     = 0xCCCCCC;
			[Bindable] private static var GRAY:uint          = 0x999999;
			[Bindable] private static var DARKGRAY:uint      = 0x666666;
			[Bindable] private static var VERYDARKGRAY:uint  = 0x333333;
			[Bindable] private static var BLACK:uint         = 0x000000;
			[Bindable] private static var CREAM:uint		 = 0xF4EAD5;
			[Bindable] private static var DARKCREAM:uint	 = 0xE4DAC5;
			[Bindable] private static var GREEN:uint         = 0x00AA00;
			[Bindable] private static var RED:uint           = 0xAA0000;
			
			[Bindable] private var _background:uint = WHITE;
			[Bindable] private var _barcolor:uint = WHITE;
			[Bindable] private var _alpha:Number = 0.65;

			private var serverTime:Date = global.serverDateTime;
			[Bindable] public var today:Date  = new Date(serverTime.fullYear,serverTime.month,serverTime.date);
			[Bindable] private var _date:Date = today;
			[Bindable] private var _month:int = 0;
			[Bindable] private var _year:int  = 2013;
			
			[Bindable] private var _html:String ="";
			[Bindable] private var _run:Boolean = false;
			
			public function get date() :Date{return _date;}
			public function get month():int {return _month;}
			public function get year() :int {return _year;}
			
			public function set date(a:Date):void{_date  = a; evaluateState();}
			public function set month(a:int):void{_month = a; evaluateState();}
			public function set year(a:int) :void{_year  = a; evaluateState();}
			
			private function evaluateState():void{
				today.hours         = 0;
				today.minutes       = 0;
				today.seconds       = 0;
				today.milliseconds  = 0;
				dateLabel.text      = date.date.toString();
				
				
				if(date.time < today.time){
					// past is disabled no question asked.
					currentState = "disabled";
					return;
				}else{
					currentState = "normal";
					_background  = WHITE;
				}
				if(date.month != month){
					currentState = "invalidMonth";
					_background  = CREAM;
					return;
				}
			}
			
			public function runReport(run:Boolean, text:String):void{
				_run 		= run;
				_barcolor 	= _run?GREEN:RED;
				_html		= text;
			}
			
			
			[Bindable]public var allowEdit:Boolean = true;
			[Bindable]public var iconClick:Function = function(a,b):void{};
			protected function icon_click(event:MouseEvent):void{
				trace("Calendar Allow Edit:",allowEdit);
				if(!allowEdit)return;
				runReport(!_run,_html);
				if(iconClick)iconClick(_run,_date,_exception);
			}
			
			private var _exception:Object = null;
			public function set exception(o:Object){
				runReport(false,"");
				_exception = o;
			}
			
			
		]]>
	</fx:Script>
	<s:VGroup width="100%" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5" gap="3">
		<s:HGroup width="100%" verticalAlign="middle">
			<s:Label id="dateLabel" width="25" fontSize="22" fontWeight="bold" 
					 color.normal="{BLACK}" 
					 color.invalidMonth="{DARKGRAY}" 
					 color.disabled="{VERYDARKGRAY}"/>
			<s:Spacer width="100%"/>
			<s:Image width="15" click.normal="icon_click(event)" source="{_barcolor==RED?glyph.button_cancel:glyph.button_save}" 	 buttonMode.normal="{allowEdit}" useHandCursor="{allowEdit}" alpha.disabled="0.5" />
		</s:HGroup>
		<s:BorderContainer backgroundColor="{_barcolor}" width="100%" minWidth="0" height="5"/>
		<s:RichText id="contentText" textFlow="{TextConverter.importToFlow(_html,TextConverter.TEXT_FIELD_HTML_FORMAT)}" width="100%" height="100%" />
	</s:VGroup>
	
</s:BorderContainer>
