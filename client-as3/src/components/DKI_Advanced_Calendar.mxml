<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" title="{sMonth(month)} {year}"
		 skinClass="skins.NullSkin"
		 xmlns:s="library://ns.adobe.com/flex/spark" backgroundAlpha="0.1" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="init(event)" xmlns:components="components.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import dm.DM;
			import dm.dmError;
			import dm.models.dmFolioExceptionDate;
			import dm.utils.dmDate;
			
			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.events.ResizeEvent;
			import mx.formatters.DateFormatter;
			import mx.utils.ObjectUtil;

			public static var MONDAY:String    = "Monday";
			public static var TUESDAY:String   = "Tuesday";
			public static var WEDNESDAY:String = "Wednesday";
			public static var THURSDAY:String  = "Thursday";
			public static var FRIDAY:String    = "Friday";
			public static var SATURDAY:String  = "Saturday";
			public static var SUNDAY:String    = "Sunday";
			
			public static var JANUARY:String   = "January";
			public static var FEBRUARY:String  = "February";
			public static var MARCH:String     = "March";
			public static var APRIL:String     = "April";
			public static var MAY:String       = "May";
			public static var JUNE:String      = "June";
			public static var JULY:String      = "July";
			public static var AUGUST:String    = "August";
			public static var SEPTEMBER:String = "September";
			public static var OCTOBER:String   = "October";
			public static var NOVEMBER:String  = "November";
			public static var DECEMBER:String  = "December";
			
			private static var FORMATTER:DateFormatter = new DateFormatter();
			
			
			[Bindable] public var allowEdit:Boolean = true;
			[Bindable] public var concTitle:Boolean = true;
			
			[Bindable] public var dayHeaderHeight:Number   = 25;
			[Bindable] public var midDayHeaderWidth:Number = 90;
			[Bindable] public var minDayHeaderWidth:Number = 50;
			[Bindable] public var borderGap:Number = 1;
			
			
			[Bindable] private var _dayHeader1:String = "";
			[Bindable] private var _dayHeader2:String = "";
			[Bindable] private var _dayHeader3:String = "";
			[Bindable] private var _dayHeader4:String = "";
			[Bindable] private var _dayHeader5:String = "";
			[Bindable] private var _dayHeader6:String = "";
			[Bindable] private var _dayHeader7:String = "";
			
			[Bindable] private var _startWeek:String = MONDAY;
			[Bindable] private var _month:Number;
			[Bindable] private var _year:Number;
			
			[Bindable] private var _windowSelectorData:ArrayCollection = new ArrayCollection(new Array(
				JANUARY.substr(0,3),
				FEBRUARY.substr(0,3),
				MARCH.substr(0,3),
				APRIL.substr(0,3),
				MAY.substr(0,3),
				JUNE.substr(0,3),
				JULY.substr(0,3),
				AUGUST.substr(0,3),
				SEPTEMBER.substr(0,3),
				OCTOBER.substr(0,3),
				NOVEMBER.substr(0,3),
				DECEMBER.substr(0,3)
			));
			[Bindable] private var _windowSelectorDataShort:ArrayCollection = new ArrayCollection(new Array(
				JANUARY.substr(0,1),
				FEBRUARY.substr(0,1),
				MARCH.substr(0,1),
				APRIL.substr(0,1),
				MAY.substr(0,1),
				JUNE.substr(0,1),
				JULY.substr(0,1),
				AUGUST.substr(0,1),
				SEPTEMBER.substr(0,1),
				OCTOBER.substr(0,1),
				NOVEMBER.substr(0,1),
				DECEMBER.substr(0,1)
			));
			
			
			protected function initMultilingualText():void
			{
				MONDAY    = resourceManager.getString('default','CALENDAR.WEEK.MON');
				TUESDAY   = resourceManager.getString('default','CALENDAR.WEEK.TUE');
				WEDNESDAY = resourceManager.getString('default','CALENDAR.WEEK.WED');
				THURSDAY  = resourceManager.getString('default','CALENDAR.WEEK.THU');
				FRIDAY    = resourceManager.getString('default','CALENDAR.WEEK.FRI');
				SATURDAY  = resourceManager.getString('default','CALENDAR.WEEK.SAT');
				SUNDAY    = resourceManager.getString('default','CALENDAR.WEEK.SUN');
				
				_startWeek = MONDAY;
				
				JANUARY   = resourceManager.getString('default','CALENDAR.MONTH.JAN');
				FEBRUARY  = resourceManager.getString('default','CALENDAR.MONTH.FEB');
				MARCH     = resourceManager.getString('default','CALENDAR.MONTH.MAR');
				APRIL     = resourceManager.getString('default','CALENDAR.MONTH.APR');
				MAY       = resourceManager.getString('default','CALENDAR.MONTH.MAY');
				JUNE      = resourceManager.getString('default','CALENDAR.MONTH.JUN');
				JULY      = resourceManager.getString('default','CALENDAR.MONTH.JUL');
				AUGUST    = resourceManager.getString('default','CALENDAR.MONTH.AUG');
				SEPTEMBER = resourceManager.getString('default','CALENDAR.MONTH.SEP');
				OCTOBER   = resourceManager.getString('default','CALENDAR.MONTH.OCT');
				NOVEMBER  = resourceManager.getString('default','CALENDAR.MONTH.NOV');
				DECEMBER  = resourceManager.getString('default','CALENDAR.MONTH.DEC');
				
				_windowSelectorData = new ArrayCollection(new Array(
					resourceManager.getString('default','CALENDAR.MONTH.JAN'),
					resourceManager.getString('default','CALENDAR.MONTH.FEB'),
					resourceManager.getString('default','CALENDAR.MONTH.MAR'),
					resourceManager.getString('default','CALENDAR.MONTH.APR'),
					resourceManager.getString('default','CALENDAR.MONTH.MAY'),
					resourceManager.getString('default','CALENDAR.MONTH.JUN'),
					resourceManager.getString('default','CALENDAR.MONTH.JUL'),
					resourceManager.getString('default','CALENDAR.MONTH.AUG'),
					resourceManager.getString('default','CALENDAR.MONTH.SEP'),
					resourceManager.getString('default','CALENDAR.MONTH.OCT'),
					resourceManager.getString('default','CALENDAR.MONTH.NOV'),
					resourceManager.getString('default','CALENDAR.MONTH.DEC')
				));
				_windowSelectorDataShort = new ArrayCollection(new Array(
					resourceManager.getString('default','CALENDAR.MONTH_SHORT.JAN'),
					resourceManager.getString('default','CALENDAR.MONTH_SHORT.FEB'),
					resourceManager.getString('default','CALENDAR.MONTH_SHORT.MAR'),
					resourceManager.getString('default','CALENDAR.MONTH_SHORT.APR'),
					resourceManager.getString('default','CALENDAR.MONTH_SHORT.MAY'),
					resourceManager.getString('default','CALENDAR.MONTH_SHORT.JUN'),
					resourceManager.getString('default','CALENDAR.MONTH_SHORT.JUL'),
					resourceManager.getString('default','CALENDAR.MONTH_SHORT.AUG'),
					resourceManager.getString('default','CALENDAR.MONTH_SHORT.SEP'),
					resourceManager.getString('default','CALENDAR.MONTH_SHORT.OCT'),
					resourceManager.getString('default','CALENDAR.MONTH_SHORT.NOV'),
					resourceManager.getString('default','CALENDAR.MONTH_SHORT.DEC')
				));
			}
			
			protected function init(event:FlexEvent):void{
				initMultilingualText();
				drawDayHeader();
				drawMonth();
			}
			
			protected function drawDayHeader():void{
				_dayHeader1 = _startWeek;
				for(var i:int = 1; i < 7 ; i++)
					this["_dayHeader"+(i+1)] = nextDay(this["_dayHeader"+(i)]);	
			}
			protected function drawMonth():void{
				
				var initDate:Date = new Date(year,month,1);
				
				FORMATTER.formatString = "EEEE";
				
				
				var fDay:Number = nDay(FORMATTER.format(initDate));
				var dDay:Number = nDay(_startWeek);
				var shift:Number = (fDay-dDay);
				while(shift < 0)shift+=7;
				
				initDate.date-=shift;
				
				for(var week:int = 1; week <= 6; week++){
					for(var day:int = 1; day <=7; day++){
						var cell:DKI_Advanced_Calendar_Cell = (this["r"+week+"d"+day] as DKI_Advanced_Calendar_Cell);
						cell.date = new Date(initDate.time);
						cell.calendar = this;
						cell.month = month;
						cell.year  = year;
						cell.runReport(true,"");
						
						if(exception[cell.date.fullYear]!=null){
							if(exception[cell.date.fullYear][cell.date.month]!=null){
								if(exception[cell.date.fullYear][cell.date.month][cell.date.date]!=null){
									cell.exception = exception[cell.date.fullYear][cell.date.month][cell.date.date];
								}
							}
						}
						
						
						initDate.date++;
					}
				}
				
			}
			
			protected function sMonth(month:Object):String{
				switch(month){
					case 0 :case JANUARY   : return JANUARY;
					case 1 :case FEBRUARY  : return FEBRUARY;
					case 2 :case MARCH     : return MARCH;
					case 3 :case APRIL     : return APRIL;
					case 4 :case MAY       : return MAY;
					case 5 :case JUNE      : return JUNE;
					case 6 :case JULY      : return JULY;
					case 7 :case AUGUST    : return AUGUST;
					case 8 :case SEPTEMBER : return SEPTEMBER;
					case 9 :case OCTOBER   : return OCTOBER;
					case 10:case NOVEMBER  : return NOVEMBER;
					case 11:case DECEMBER  : return DECEMBER;
				}
				return resourceManager.getString('default','CALENDAR.MONTH.UNKNOWN');
			}
			
			protected function nextDay(day:String):String{
				switch(day){
					case MONDAY    : return TUESDAY;
					case TUESDAY   : return WEDNESDAY;
					case WEDNESDAY : return THURSDAY;
					case THURSDAY  : return FRIDAY;
					case FRIDAY    : return SATURDAY;
					case SATURDAY  : return SUNDAY;
					case SUNDAY    : return MONDAY;
				}
				return resourceManager.getString('default','CALENDAR.WEEK.UNKNOWN');
			}
			
			protected function prevDay(day:String):String{
				switch(day){
					case MONDAY    : return SUNDAY;
					case TUESDAY   : return MONDAY;
					case WEDNESDAY : return TUESDAY;
					case THURSDAY  : return WEDNESDAY;
					case FRIDAY    : return THURSDAY;
					case SATURDAY  : return FRIDAY;
					case SUNDAY    : return SATURDAY;
				}
				return resourceManager.getString('default','CALENDAR.WEEK.UNKNOWN');
			}
			
			protected function nDay(day:String):Number{
				switch(day){
					case MONDAY    : return 1;
					case TUESDAY   : return 2;
					case WEDNESDAY : return 3;
					case THURSDAY  : return 4;
					case FRIDAY    : return 5;
					case SATURDAY  : return 6;
					case SUNDAY    : return 0;
				}
				return -7;
			}
			
			public function get startWeek():String{
				return _startWeek;
			}
			public function set startWeek(day:String):void{
				_startWeek = day;
				init(null);
			}
			[Bindable] public function get month():Number{
				return _month;
			}
			public function set month(month:Number):void{
				_month = month;
				init(null);
				
			}
			[Bindable] public function get year():Number{
				return _year;
			}
			public function set year(year:Number):void{
				_year = year;
				init(null);
				
			}
			
			
			
			protected function changeWindow(event:ItemClickEvent):void{
				month = windowSelector.selectedIndex;
				DM.FolioExceptionDates.reload();
			}
			
			
			public var exception:Object = new Object();
			
			public function set exceptionDates(exception:Object):void{
				this.exception = exception;
				init(null);
			}
			public function get exceptionDates():Object{
				return exception;
			}
			protected function toggleResize(event:ResizeEvent):void{
		
			}
			
			protected function concatenateName(o:Object):String{
				if(windowSelector.width<300)return o.toString().substr(0,3);
				return o.toString().substr(0,3);
			}
			
			[Bindable] public var toggleIcon:Function;
			protected function iconClick(toggle:Boolean, date:Date, exception:Object){
				if(toggleIcon)toggleIcon(toggle,date,exception);
			}
			
			
			
		]]>
	</fx:Script>
	<s:Scroller id="scroller" width="100%" height="100%">
		
		<s:Group width="100%" height="100%">
			<s:VGroup gap="{borderGap}" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5" width="100%" height="100%" >
				<s:Label text="{sMonth(month)} {year}" width="100%" fontWeight="bold" fontSize="22" verticalAlign="middle" textAlign="center"/>
				<s:Spacer height="5"/>
				<s:HGroup width="100%">
					<s:Button label="&lt; {year-1}" click="year--; DM.FolioExceptionDates.reload();"/>
					<mx:ToggleButtonBar selectedIndex="{month}" id="windowSelector" minWidth="200" width="100%" itemClick="changeWindow(event)" dataProvider="{concTitle?_windowSelectorData:_windowSelectorDataShort}" creationComplete="windowSelector.percentWidth=100"/>
					<s:Button label="{year+1} &gt;" click="year++; DM.FolioExceptionDates.reload();"/>
				</s:HGroup>
				<s:Spacer height="5"/>
				<s:HGroup width="100%" gap="{borderGap}" textAlign="center" fontWeight="bold">
					<s:BorderContainer width="100%" height="{dayHeaderHeight}" minWidth="{minDayHeaderWidth}" backgroundAlpha="0.65">
						<s:Label id="dayLabel1" text="{(dayLabel1.width>midDayHeaderWidth)?_dayHeader1:_dayHeader1.substr(0,3).toUpperCase()}" 
								 verticalAlign="middle" verticalCenter="0" 
								 width="100%" minWidth="{minDayHeaderWidth}"/>
					</s:BorderContainer>
					<s:BorderContainer width="100%" height="{dayHeaderHeight}" minWidth="{minDayHeaderWidth}" backgroundAlpha="0.65">
						<s:Label id="dayLabel2" text="{(dayLabel2.width>midDayHeaderWidth)?_dayHeader2:_dayHeader2.substr(0,3).toUpperCase()}" 
								 verticalAlign="middle" verticalCenter="0" 
								 width="100%" minWidth="{minDayHeaderWidth}"/>
					</s:BorderContainer>
					<s:BorderContainer width="100%" height="{dayHeaderHeight}" minWidth="{minDayHeaderWidth}" backgroundAlpha="0.65">
						<s:Label id="dayLabel3" text="{(dayLabel3.width>midDayHeaderWidth)?_dayHeader3:_dayHeader3.substr(0,3).toUpperCase()}" 
								 verticalAlign="middle" verticalCenter="0" 
								 width="100%" minWidth="{minDayHeaderWidth}"/>
					</s:BorderContainer>
					<s:BorderContainer width="100%" height="{dayHeaderHeight}" minWidth="{minDayHeaderWidth}" backgroundAlpha="0.65">
						<s:Label id="dayLabel4" text="{(dayLabel4.width>midDayHeaderWidth)?_dayHeader4:_dayHeader4.substr(0,3).toUpperCase()}" 
								 verticalAlign="middle" verticalCenter="0" 
								 width="100%" minWidth="{minDayHeaderWidth}"/>
					</s:BorderContainer>
					<s:BorderContainer width="100%" height="{dayHeaderHeight}" minWidth="{minDayHeaderWidth}" backgroundAlpha="0.65">
						<s:Label id="dayLabel5" text="{(dayLabel5.width>midDayHeaderWidth)?_dayHeader5:_dayHeader5.substr(0,3).toUpperCase()}" 
								 verticalAlign="middle" verticalCenter="0"
								 width="100%" minWidth="{minDayHeaderWidth}"/>
					</s:BorderContainer>
					<s:BorderContainer width="100%" height="{dayHeaderHeight}" minWidth="{minDayHeaderWidth}" backgroundAlpha="0.65">
						<s:Label id="dayLabel6" text="{(dayLabel6.width>midDayHeaderWidth)?_dayHeader6:_dayHeader6.substr(0,3).toUpperCase()}" 
								 verticalAlign="middle" verticalCenter="0" 
								 width="100%" minWidth="{minDayHeaderWidth}"/>
					</s:BorderContainer>
					<s:BorderContainer width="100%" height="{dayHeaderHeight}" minWidth="{minDayHeaderWidth}" backgroundAlpha="0.65">
						<s:Label id="dayLabel7" text="{(dayLabel7.width>midDayHeaderWidth)?_dayHeader7:_dayHeader7.substr(0,3).toUpperCase()}" 
								 verticalAlign="middle" verticalCenter="0"
								 width="100%" minWidth="{minDayHeaderWidth}"/>
					</s:BorderContainer>
				</s:HGroup>
				<s:HGroup width="100%" height="100%" gap="{borderGap}">
					<components:DKI_Advanced_Calendar_Cell id="r1d1" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r1d2" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r1d3" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r1d4" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r1d5" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r1d6" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r1d7" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
				</s:HGroup>
				<s:HGroup width="100%" height="100%" gap="{borderGap}">
					<components:DKI_Advanced_Calendar_Cell id="r2d1" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r2d2" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r2d3" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r2d4" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r2d5" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r2d6" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r2d7" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
				</s:HGroup>
				<s:HGroup width="100%" height="100%" gap="{borderGap}">
					<components:DKI_Advanced_Calendar_Cell id="r3d1" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r3d2" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r3d3" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r3d4" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r3d5" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r3d6" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r3d7" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
				</s:HGroup>
				<s:HGroup width="100%" height="100%" gap="{borderGap}">
					<components:DKI_Advanced_Calendar_Cell id="r4d1" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r4d2" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r4d3" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r4d4" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r4d5" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r4d6" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r4d7" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
				</s:HGroup>
				<s:HGroup width="100%" height="100%" gap="{borderGap}">
					<components:DKI_Advanced_Calendar_Cell id="r5d1" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r5d2" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r5d3" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r5d4" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r5d5" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r5d6" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r5d7" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
				</s:HGroup>
				<s:HGroup width="100%" height="100%" gap="{borderGap}">
					<components:DKI_Advanced_Calendar_Cell id="r6d1" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r6d2" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r6d3" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r6d4" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r6d5" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r6d6" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
					<components:DKI_Advanced_Calendar_Cell id="r6d7" iconClick="{iconClick}" allowEdit="{allowEdit}"/>
				</s:HGroup>
			</s:VGroup>
			
			
		</s:Group>
	</s:Scroller>
	
	
</s:Panel>
