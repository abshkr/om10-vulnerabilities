<?xml version="1.0" encoding="utf-8"?>
<s:DataGrid xmlns:fx="http://ns.adobe.com/mxml/2009"
			xmlns:s="library://ns.adobe.com/flex/spark" skinClass="skins.DKI_DataGrid_Skin"
			xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300"
			mouseOver="grid_mouseOverHandler(event)"
			mouseOut="grid_mouseOutHandler(event)" 
			gridMouseDrag="gridMouseDragHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.core.DragSource;
			import mx.events.DragEvent;
			import mx.managers.DragManager;
			
			import spark.components.gridClasses.CellPosition;
			import spark.events.GridEvent;
			
			public var dropEnabled:Boolean=false;
			
			public var dropAction:Function= new Function();
			
			private var dropIndex:int = -1;
			
			protected function grid_mouseOverHandler(event:MouseEvent):void
			{
				scroller.verticalScrollBar.alpha=1.0;
				scroller.horizontalScrollBar.alpha=1.0;
				if (dropEnabled) addEventListener(DragEvent.DRAG_ENTER,gridDragEnter);
				
			}
			
			protected function gridMouseDragHandler(event:GridEvent):void
			{
				if (DragManager.isDragging)
					return;
			}
			
			protected function grid_mouseOutHandler(event:MouseEvent):void
			{
				scroller.verticalScrollBar.alpha=0.3;
				scroller.horizontalScrollBar.alpha=0.3;
			}
			
			private function rowDragOverHandler(event:DragEvent):void
			{
				showRowDropFeedback(event);
			}
			
			protected function gridDragEnter(event:DragEvent):void
			{
				if (event.dragSource.hasFormat("itemsByIndex"))
				{
					grid.addEventListener(DragEvent.DRAG_OVER, rowDragOverHandler);
					grid.addEventListener(DragEvent.DRAG_EXIT, rowDragExitHandler);
					grid.addEventListener(DragEvent.DRAG_DROP, rowDragDropHandler);
				}
				DragManager.acceptDragDrop(grid);
			}
			
			private function rowDragExitHandler(event:DragEvent):void
			{
				if (dropEnabled)
				{
					grid.removeEventListener(DragEvent.DRAG_OVER, rowDragOverHandler);
					grid.removeEventListener(DragEvent.DRAG_EXIT, rowDragExitHandler);
					grid.removeEventListener(DragEvent.DRAG_DROP, rowDragDropHandler);
				}
			}
			
			private function rowDragDropHandler(event:DragEvent):void
			{
				if (dropAction() != null) dropAction();
			}
			
			
			private function showRowDropFeedback(event:DragEvent):void
			{
				var pt:Point = new Point(event.stageX, event.stageY);
				pt = grid.globalToLocal(pt);
				var pos:CellPosition = grid.getCellAt(pt.x, pt.y);
				if(pos!=null)
				{
					var newDropIndex:int = pos.rowIndex;
					if ((pos.rowIndex > -1) && (pos.rowIndex < dataProvider.length)) 
						selectedIndex = pos.rowIndex;
				}
				else
					selectedIndex = -1;
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</s:DataGrid>