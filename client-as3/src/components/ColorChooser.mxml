<?xml version="1.0" encoding="utf-8"?>
<mx:PopUpButton xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:components="components.*" preinitialize="preInitializeHandler(event)" creationComplete="init(event)">
	<fx:Script>
		<![CDATA[
			//import components.ColorSwatch;
			import components.ColorSwatchSpectrum;
			
			import events.ColorSelectEvent;
			
			import mx.events.FlexEvent;
			import mx.skins.halo.PopUpButtonSkin;
			import mx.skins.halo.PopUpIcon;
			
			private var drawColor:uint = 0xffffff;
			
			
			protected function preInitializeHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				this.setStyle("skin", mx.skins.halo.PopUpButtonSkin);
				this.setStyle("popUpIcon", mx.skins.halo.PopUpIcon);
				
			}
			
			protected function init(event:FlexEvent):void{
				this.setStyle("cornerRadius",0);
				//popUp = new ColorSwatch(200);
				popUp = new ColorSwatchSpectrum(200);
				popUp.addEventListener(ColorSelectEvent.COLOR_SELECTED, selectColor);
			}
			public function get selectedColor():String{
				return uintToString(drawColor);
			}
			public function set selectedColor(value:String):void{
				drawColor = stringToUint(value);
				invalidateDisplayList();
			}
			private function selectColor(e:ColorSelectEvent):void{
				drawColor = e.pickedColor;
				invalidateDisplayList();
				close();
			}
			override protected function updateDisplayList(w:Number, h:Number):void{
				super.updateDisplayList(w,h);
				var rect:Sprite = new Sprite();
				var gap:int=2;
				rect.graphics.beginFill(drawColor, 1.0);
				rect.graphics.drawRect(gap, gap, w-20-gap*2, h-gap*2);
				rect.graphics.endFill();
				this.addChild(rect);
				/*
				graphics.beginFill(drawColor, 1.0);
				graphics.drawRect(0,0,w-20,h);
				graphics.endFill();
				*/
			}
			private function uintToString(hex:uint):String {
				var hexString:* = hex.toString(16).toUpperCase();
				var cnt:int = 6 - hexString.length;
				var zeros:String = "";
				for (var i:int = 0; i < cnt; i++) {
					zeros += "0";
				}
				return "#" + zeros + hexString;
			}
			private function stringToUint(hexString:String):uint {
				var hex:String;
				if ( hexString == "" || hexString == null )
				{
					hexString = "#FFFFFF";
				}
				hex = "0x" + hexString.substr(1);
				
				return uint(hex);
			}
			
		]]>
	</fx:Script>
</mx:PopUpButton>
