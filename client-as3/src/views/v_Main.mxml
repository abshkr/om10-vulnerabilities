<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:components="components.*" 
		 width="100%" height="100%" creationComplete="main_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import flash.events.MouseEvent;
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.core.IFlexAsset;
			import mx.core.IFlexDisplayObject;
			import mx.core.IVisualElement;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			import components.DKI_AlertBox;
			import components.PopupWindow;
			
			import events.ArrEvent;
			
			private var popwin:PopupWindow = new PopupWindow();
			
			protected function main_creationCompleteHandler(event:FlexEvent):void
			{
				popwin.name="popwin";
				addEventListener('menu', popupOpen);
				global.app.addEventListener("errormsg", showErrorMsg);
			}
			
			protected function popupOpen(event:ArrEvent):void
			{
				FlexGlobals.topLevelApplication.main.headerMenu.security.enabled = false;
				FlexGlobals.topLevelApplication.main.headerMenu.profile.enabled = false;
				
				popwin.addEventListener(CloseEvent.CLOSE, win_close);
				popwin.top=popwin.bottom=popwin.left=popwin.right=2;
				popwin.top=-100;
				dispArea.addElement(popwin);
				popwin.loadModule(event.data);
			}
			
			protected function win_close(event:CloseEvent):void
			{
				
				var child:* = (popwin.ldr.child as IModuleInterface);
				if(child.hasOwnProperty('view')){
					child = child.view;
					
					// stop the getPaged process in back-end 
					if ( child.hasOwnProperty('killBtn') )
					{
						trace( "killBtn in screen [" + popwin.title + "] is programmingly clicked when window is closed!");
						if ( child is v_LiveJournal )
						{
							if ( child.currentState == 'search' )
							{
								child.killBtn.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
							}
						}
						else
						{
							child.killBtn.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
						}
					}
					
					if(child is v_LoadSchedules){
						if(child.currentState == 'bol'){
							if(child.closeBol){
								child.closeBol(null);return;
							}
						}
					}
				}
				event.stopImmediatePropagation();
				popwin.removeEventListener(CloseEvent.CLOSE, win_close);
				dispArea.removeElement(popwin);
				
				FlexGlobals.topLevelApplication.main.headerMenu.security.enabled = true;
				FlexGlobals.topLevelApplication.main.headerMenu.profile.enabled = true;
			}
			
			public function removePopup():void
			{
				if(dispArea.getChildByName("popwin") != null) dispArea.removeElement(popwin);
			}
			
			private function showErrorMsg(event:TextEvent):void
			{
				Alert.show(event.text, "Error");
			}
			
			private function confirmDelete(event:Event):void
			{
				var alert:DKI_AlertBox = new DKI_AlertBox();
				alert.msg = "Are you sure you want to delete this item?";
				PopUpManager.addPopUp(alert,this,true);
				PopUpManager.centerPopUp(alert);
			}
			
			protected function testmsgcont(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var o:Object = new Object();
				o.lastSequence = 7877990;
				o.sesLastSequence = 7877991;
				o.data = new Array();
				o.data.push({GEN_DATE:"2015-01-27 13:43:36:170672",MESSAGE:"[BAY1V: Trip 8866 Tanker BP-759QXH Interlock tripped while product is flowing. .                                                                                                                                                             |] "});
				o.data.push({GEN_DATE:"2015-01-27 13:43:36:170672",MESSAGE:"[BAY1V: Trip 8866 Tanker BP-759QXH Interlock tripped while product is flowing. .                                                                                                                                                             |] "});
				o.data.push({GEN_DATE:"2015-01-27 13:43:36:170672",MESSAGE:"[BAY1V: Trip 8866 Tanker BP-759QXH Interlock tripped while product is flowing. .                                                                                                                                                             |] "});
				o.data.push({GEN_DATE:"2015-01-27 13:43:36:170672",MESSAGE:"[BAY1V: Trip 8866 Tanker BP-759QXH Interlock tripped while product is flowing. .                                                                                                                                                             |] "});
				o.data.push({GEN_DATE:"2015-01-27 13:43:36:170672",MESSAGE:"[BAY1V: Trip 8866 Tanker BP-759QXH Interlock tripped while product is flowing. .                                                                                                                                                             |] "});
				o.data.push({GEN_DATE:"2015-01-27 13:43:36:170672",MESSAGE:"[BAY1V: Trip 8866 Tanker BP-759QXH Interlock tripped while product is flowing. .                                                                                                                                                             |] "});
				global.updateAlarmResponder(o); 
			}
			
		]]>
	</fx:Script>
	
	<s:Group left="0" top="0" right="0" bottom="0">
		<s:VGroup width="100%" height="100%" gap="10" paddingLeft="-1" paddingRight="-1" paddingTop="-1">
			<components:HeaderMenu id="headerMenu" width="100%" height="25"/>
			<components:MenuContainer id="mainMenu" width="100%" height="75"/>
			<s:Spacer height="5"/>
			<s:Group id="dispArea" width="100%" height="100%" minWidth="750" minHeight="0">
				<components:WidgetContainer id="widgetList" width="100%" height="100%" dp="{global.menuArray}"/>
				<components:WidgetHome width="100%" height="100%" visible="{mainMenu.menuSelector.selectedIndex == 0}"/>
				<!--<components:PopupWindow id="popwin" verticalCenter="0" horizontalCenter="0" visible="false"/>-->
			</s:Group>
			<components:StatusBar id="statusBar" width="100%" height="30"/>			
		</s:VGroup>
		<!--<s:Button click="testmsgcont(event)" bottom="5" right="500"/>-->
		<components:MessageContainer id="msgContainer" bottom="0" right="35" dp="{global.messageList}"/>
	</s:Group>
</s:Group>
