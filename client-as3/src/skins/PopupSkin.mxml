<?xml version="1.0" encoding="utf-8"?>

<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:mx="library://ns.adobe.com/flex/mx"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
			 blendMode="normal" mouseEnabled="false" minWidth="131" minHeight="127">
    
    <fx:Metadata>
        <![CDATA[ 
        	[HostComponent("spark.components.Panel")]
        ]]>
    </fx:Metadata> 
    
    <fx:Script fb:purpose="styling">
        <![CDATA[
		import mx.core.FlexVersion;
		import mx.events.CloseEvent;
			
		private var isDrag:Boolean= false;
			
		[Bindable] private var corner:Number = 8;
		
        static private const exclusions:Array = ["background", "titleDisplay", "contentGroup", "controlBarGroup", "border"];
			
		static private const exclusions_4_0:Array = ["background", "titleDisplay", "contentGroup", "controlBarGroup"];

		override public function get colorizeExclusions():Array 
		{
			return exclusions;
		}
        
        override protected function initializationComplete():void
        {
            useChromeColor = true;
            super.initializationComplete();
        }
        
        override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
        {
            
            super.updateDisplayList(unscaledWidth, unscaledHeight);
        }
			
		protected function closeHandler(event:MouseEvent):void
		{
			this.dispatchEvent(new CloseEvent(CloseEvent.CLOSE,true, false));
		}
		
		protected function minimizeHandler(event:MouseEvent):void
		{
			this.dispatchEvent(new CloseEvent(CloseEvent.CLOSE,true, false));
		}	
			
		protected function drag_Handler(event:MouseEvent):void
		{
			event.stopImmediatePropagation();
			var draggable:Boolean = true;
			if (event.localX < titleDisplay.width-30 && draggable)
			{
				isDrag=true;
				//hostComponent.startDrag();
			}
		}
			
			
		protected function stop_Handler(event:MouseEvent):void
		{
			if (isDrag)
			{
				isDrag=false;
				//hostComponent.stopDrag();
			}	
		}
			
		]]>
    </fx:Script>
	
	<fx:Declarations>
		<s:GlowFilter id="glow" inner="true" color="0x000044" strength="1.4" blurX="15" blurY="15"/>
		<s:DropShadowFilter id="drop" alpha="0.95" angle="60" blurX="10" blurY="10" color="0x000055" distance="5"/> 
	</fx:Declarations>
    
    <s:states>
        <s:State name="normal" />
        <s:State name="disabled" />
        <s:State name="normalWithControlBar" stateGroups="withControls" />
        <s:State name="disabledWithControlBar" stateGroups="withControls" />
    </s:states>

	<s:Group id="background" left="0" right="0" top="0" bottom="0">
		<s:Rect left="0" right="0" top="0" bottom="0" filters="{drop}" 
				topLeftRadiusX="{corner}" topLeftRadiusY="{corner}" topRightRadiusX="{corner}" topRightRadiusY="{corner}"
				bottomLeftRadiusX="{corner}" bottomLeftRadiusY="{corner}" bottomRightRadiusX="{corner}" bottomRightRadiusY="{corner}">
			<s:fill>
				<s:LinearGradient rotation="200">
					<s:GradientEntry color="0x94B0D0"/>
					<s:GradientEntry color="0xDDDDDD"/>
					<s:GradientEntry color="0x94B0D0"/>
					<s:GradientEntry color="0xDDDDDD"/>
				</s:LinearGradient>				
			</s:fill>
		</s:Rect>		
	</s:Group>
	
	<s:Rect left="4" right="4" top="25" bottom="4" filters="{glow}" 
			topLeftRadiusX="{corner}" topLeftRadiusY="{corner}" topRightRadiusX="{corner}" topRightRadiusY="{corner}"
			bottomLeftRadiusX="{corner}" bottomLeftRadiusY="{corner}" bottomRightRadiusX="{corner}" bottomRightRadiusY="{corner}">
		<s:fill>
			<s:LinearGradient rotation="200">
				<s:GradientEntry color="0x94B0D0"/>
				<s:GradientEntry color="0xDDDDDD"/>
				<s:GradientEntry color="0x94B0D0"/>
				<s:GradientEntry color="0xDDDDDD"/>
			</s:LinearGradient>				
		</s:fill>
	</s:Rect>			
	<s:HGroup width="100%" paddingLeft="8" paddingRight="8" paddingTop="2" mouseEnabledWhereTransparent="true">
		<s:Label id="titleDisplay" width="100%" height="26" fontWeight="bold"
				 maxDisplayedLines="1" textAlign="start" verticalAlign="middle"
				 bottom.disabled="0"
				 bottom.disabledWithControlBar="0"
				 left.normal="12" right.normal="12" top.normal="5" height.normal="21"
				 bottom.normalWithControlBar="0"/>
		<s:HGroup height="100%" gap="3" paddingTop="2">
			<!--<s:Button width="15" height="15" click="minimizeHandler(event)" skinClass="spark.skins.spark.TitleWindowCloseButtonSkin"/>-->
			<s:Button width="15" height="15" click="closeHandler(event)" skinClass="spark.skins.spark.TitleWindowCloseButtonSkin"/>
		</s:HGroup>
	</s:HGroup>
    <s:Group id="contentGroup" left="6" right="6" top="27" bottom="6" minWidth="0" minHeight="0" clipAndEnableScrolling="true"/>
</s:SparkSkin>
