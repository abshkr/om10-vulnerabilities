<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false" xmlns:components="components.*">
	
	<s:states>
		<s:State name="normal" />
		<s:State name="selected" />
		<s:State name="hovered"/>
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import components.ModalCompartmentDetails;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import valueObjects.EquipmentCompartment;
			
			
			private function showDetails(arr:Object):void
			{
				var eq:ModalCompartmentDetails = new ModalCompartmentDetails();
				eq.title = resourceManager.getString('default','global.titles.cmpt_details');
				
				var temp:ArrayCollection = new ArrayCollection;
				for each(var x:Object in arr){
					temp.addItem(x);
				}
				eq.arr = temp;
				eq.nComp = arr.length.toString();
				PopUpManager.addPopUp(eq,this.parentApplication as DisplayObject,true);
				PopUpManager.centerPopUp(eq);
			}
			
			public function getCompArray(arr:Object):ArrayCollection
			{
				//trace( data.toString(), data.cmpt_no, data.adj_safefill );
				//trace( arr.toString() );
				var temp:ArrayCollection = new ArrayCollection;
				for each(var x:Object in arr){
					//trace("***********", x['cmpt_no'], x['adj_safefill']);
					temp.addItem(x);
				}
				return temp;
			}
			
			public function getRowCount(arr:Object):uint
			{
				var count:uint;
				
				count = arr.length;
				if( count>=10 )
				{
					count = 10;
				}

				return count;
			}
			
			public function isGridVisible(arr:Object):Boolean
			{
				if(arr.length==0) return false;
				else return true;
			}
			
		]]>
	</fx:Script>
	
	<s:transitions>
		<s:Transition fromState="normal" toState="hovered">
			<s:Fade target="{btnGrp}" duration="500"/>
		</s:Transition>
		<s:Transition fromState="hovered" toState="normal">
			<s:Fade target="{btnGrp}" duration="500"/>
		</s:Transition>
	</s:transitions>
	
	<s:VGroup>
		<components:DKI_DataGrid width="100%" height="100%" id="compList" requestedRowCount="{getRowCount(data.compartments)}" dataProvider="{getCompArray(data.compartments)}" visible="{isGridVisible(data.compartments)}">
			<components:columns>
				<s:ArrayList>
					<s:source>
					<s:GridColumn dataField="cmpt_no" headerText="{resourceManager.getString('default','EQPT_CMPT_NO')}" width="40"></s:GridColumn>
					<s:GridColumn dataField="adj_safefill" headerText="{global.gSafefillLabel}" width="70"></s:GridColumn>
					<s:GridColumn dataField="adj_capacity" headerText="{global.gCapacityLabel}" width="70"></s:GridColumn>
					<s:GridColumn dataField="unit_title" headerText="{resourceManager.getString('default','EQPT_CMPT_UNIT')}" width="60"></s:GridColumn>
						
					</s:source>
				</s:ArrayList>
			</components:columns>
		</components:DKI_DataGrid>
	</s:VGroup>
	
	<s:HGroup id="btnGrp" top="3" right="3" includeIn="hovered,selected" gap="1">
		<s:Image source="assets/icons/info.png" useHandCursor="true" buttonMode="true" click="showDetails(data.compartments)" visible="true"/>
	</s:HGroup>
	
</s:ItemRenderer>
