<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:components="components.*"
		  xmlns:identificationassignmentservice="services.identificationassignmentservice.*"
		  creationComplete="creationCompleteHandler(event)"
		  currentState="normal" gap="2"
		  width="100%" height="100%">
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="widget"/>
		<s:State name="edit" enterState="
				 callLater(function():void{dataGrid.ensureCellIsVisible(dataGrid.selectedIndex);});"/>
		<s:State name="create"/>
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import com.adobe.fiber.runtime.lib.DateTimeFunc;
			
			import components.DKI_AlertBox;
			import components.DeleteDialog;
			import components.MessageDialog;
			import components.TextInputDialog;
			
			import dm.remoteDataService;
			import dm.utils.tools;
			
			import flash.events.KeyboardEvent;
			import flash.globalization.LocaleID;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;
			
			import renderers.DKI_HeaderColumn_Renderer;
			
			import spark.components.ToggleButton;
			import spark.components.VScrollBar;
			import spark.components.gridClasses.IGridItemRenderer;
			import spark.events.GridEvent;
			import spark.events.GridSelectionEvent;
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			import valueObjects.GUI_AccessKeys;
			
			[Bindable] public var readOnly:Boolean = false;
			[Bindable] public var canUpdate:Boolean = false;
			[Bindable] public var canCreate:Boolean = false;
			[Bindable] public var canDelete:Boolean = false;
			[Bindable] public var hasPassword:Boolean = false;
			
			[Bindable] public var labelWidth:int = 80;
			[Bindable] public var labelHeight:int = 26;
			[Bindable] public var fieldWidth:int = 175;
			[Bindable] public var fieldHeight:int = 26;
			[Bindable] public var spaceWidth:int = 20;
			[Bindable] public var spaceHeight:int = -2;
			
			[Bindable] public var carrierBtnIndex:int = 0;
//			[Bindable] public var carrierBtnTexts:Array= new Array( resourceManager.getString('default','TNKR_CARRIER_NAME'), resourceManager.getString('default','TNKR_OWNER_NAME') );
			[Bindable] public var carrierBtnTexts:Array= new Array( "Carrier", "Owner" );
			
			
			private var idx:int=-1;
			
			private var currentFilter:String=null;
			private var currentOrder:String='kya_key_no';
			private var currentDirection:String="ASC";
			
			private var currentFields:Object=new Object();
			private var currentTypes:Object=new Object();
			private var currentSorts:Object=new Object();
			private var currentOrders:Object=new Object();
			private var currentSortSeq:int=0;
			
			private var eq_filter:String=null;
			
			private var confirmDelete:DKI_AlertBox;
			private var cardNoInput:TextInputDialog;
			
			public static const KEY_TYPE__UNASSIGNED:int = 0;
			public static const KEY_TYPE__SUPERVISOR:int = 1;
			public static const KEY_TYPE__DRIVER:int = 2;
			public static const KEY_TYPE__PERSONNEL:int = 3;
			public static const KEY_TYPE__TANKER:int = 4;
			public static const KEY_TYPE__COMBINATION:int = 5;
			public static const KEY_TYPE__RAIL_LOADER:int = 6;
			public static const KEY_TYPE__SCUP_TRIP:int = 7;
			public static const KEY_TYPE__SCHEDULABLE:int = 8;
			public static const KEY_TYPE__NON_SCHEDULABLE:int = 9;
			public static const KEY_TYPE__LOAD:int = 10;
			public static const KEY_TYPE__ALLOCATION:int = 11;
			public static const KEY_TYPE__DISTRIBUTION:int = 12;
			
			public static const KEY_ROLE__VISITOR:int = 0;
			public static const KEY_ROLE__MANAGER:int = 1;
			public static const KEY_ROLE__ACCOUNTANT:int = 2;
			public static const KEY_ROLE__SUPERVISOR:int = 3;
			public static const KEY_ROLE__ENGINEER:int = 4;
			public static const KEY_ROLE__DISPATCHER:int = 5;
			public static const KEY_ROLE__GUARD:int = 6;
			public static const KEY_ROLE__DRIVER:int = 7;
			public static const KEY_ROLE__CONTRACTOR:int = 8;
			public static const KEY_ROLE__LOADER:int = 9;
			
			private var gridColumnSequenceMaker:remoteDataService = new remoteDataService( "ScreenGridColumnService.lookupGridColumnSequence", null, gridColumnSequenceMaker_resultHandler, 1 );
			private var _gridColumnSequenceString:String="";
			
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				carrierBtnTexts[0] = resourceManager.getString('default','TNKR_CARRIER_NAME');
				carrierBtnTexts[1] = resourceManager.getString('default','TNKR_OWNER_NAME');
				//resourceManager.localeChain = ['zh_CN'];
				//global.LanguageCode="CHN";
				this.gridColumnSequenceMaker.service( "ID_ASSIGNMENT" );
				
				//currentSorts['kya_key_no'] = 'ASC';
				//getPagedResult.token = identificationAssignmentService.getPaged(currentFilter,"", currentOrder, currentDirection);
				getPagedResult.token = identificationAssignmentService.getPaged( currentFields, currentTypes, currentSorts, currentOrders);
				lookupKeyAllocCmpy.token = identificationAssignmentService.lookupKeyCompany(-1);
				lookupKeyIssuer.token = identificationAssignmentService.lookupKeyCompany(5);
				lookupKeyDrawer.token = identificationAssignmentService.lookupKeyCompany(4);
				lookupKeySupplier.token = identificationAssignmentService.lookupKeyCompany(1);
				lookupKeyEmployer.token = identificationAssignmentService.lookupKeyCompany(6);
				lookupKeyCarrier.token = identificationAssignmentService.lookupKeyCompany(2);
				lookupKeyCustomer.token = identificationAssignmentService.lookupKeyCustomer("-1");
				lookupKeyType.token = identificationAssignmentService.lookupKeyType();
				lookupKeyPhysType.token = identificationAssignmentService.lookupKeyPhysType();
				lookupKeyRole.token = identificationAssignmentService.lookupKeyRole();
				lookupKeyPsnl.token = identificationAssignmentService.lookupKeyPsnl("-1", -1);
				lookupKeyTnkr.token = identificationAssignmentService.lookupKeyTnkr("-1");
				lookupKeyEqpt.token = identificationAssignmentService.lookupKeyEqpt("-1", "-1");
				lookupKeyTerminal.token = identificationAssignmentService.lookupKeyTerminal();
				lookupKeyTripNew.token = identificationAssignmentService.lookupKeyTrip("-1", "F");
				lookupKeyTrip.token = identificationAssignmentService.lookupKeyTrip("-1", "-1");
				lookupKeyAllocType.token = identificationAssignmentService.lookupKeyAllocType();
				lookupKeyOrder.token = identificationAssignmentService.lookupKeyOrder("-1");
				lookupKeyTimeCode.token = identificationAssignmentService.lookupKeyTimeCode();
				
				getTotalRecords.token = identificationAssignmentService.getTotalRecords();
				
				trace("this.grid.scroller1111", this.dataGrid.scroller);
				trace("this.grid.scroller.verticalScrollBar.value", this.dataGrid.scroller.verticalScrollBar.value);
				this.dataGrid.scroller.verticalScrollBar.addEventListener(Event.CHANGE, verticalScrollBarChanged);
				this.dataGrid.addEventListener(KeyboardEvent.KEY_UP, reportKeyUp);
				this.dataGrid.columnHeaderGroup.addEventListener(GridEvent.GRID_CLICK, headerClickListener);
				
				// the following data services will be re-visited during operations
				/*
				lookupKeyPsnl.token 
				lookupKeyTnkr.token 
				lookupKeyEqpt.token 
				lookupKeyTripNew.token
				lookupKeyTrip.token
				lookupKeyCustomer.token 
				lookupKeyOrder.token 
				getPagedResult.token 
				isKeyExisted.token 
				isKeyIdExisted.token 
				*/
			}
			
			protected function gridColumnSequenceMaker_resultHandler():void
			{
				this._gridColumnSequenceString =  gridColumnSequenceMaker.dataString;
				
				if ( _gridColumnSequenceString.length > 0 )
				{
					global.adjustGridColumnSequence( _gridColumnSequenceString.substr(1), dataGrid );
				}
				
			}
			
			
			private function isKeyTypeIncluded(type:int):Boolean
			{
				var count:int;
				var i:int;
				var included:Boolean=false;
				
				count = lookupKeyType.lastResult.length;
				for (i=0; i<count; i++)
				{
					if ( type == lookupKeyType.lastResult[i] )
					{
						included = true;
						break;
					}
				}
				
				return included;
			}
			
			protected function adjustKeyAllocCompany():void
			{
				var alloc_type:int;
				
				if ( this.kya_alloc_type.selectedIndex < 0 )
				{
					alloc_type = -1;
				}
				else
				{
					alloc_type = lookupKeyAllocType.lastResult[kya_alloc_type.selectedIndex].alloc_type_id;
				}
				
				lookupKeyAllocCmpy.token = identificationAssignmentService.lookupKeyCompany(alloc_type);
			}

			protected function adjustKeyPersonnel():void
			{
				var employer:String;
				var role:int;
				
				if ( this.kya_psnl_cmpy.selectedIndex < 0 )
				{
					employer = "-1";
				}
				else
				{
					employer = lookupKeyEmployer.lastResult[kya_psnl_cmpy.selectedIndex].cmpy_code;
				}
				if ( this.kya_role.selectedIndex < 0 )
				{
					role = -1;
				}
				else
				{
					role = lookupKeyRole.lastResult[kya_role.selectedIndex].role_id;
				}
				
				//var txt:String;
				//txt = this.kya_personnel.selectedItem;
				lookupKeyPsnl.token = identificationAssignmentService.lookupKeyPsnl( employer, role );
				//this.kya_personnel.selectedItem = txt;
				
				var key_type:int;
				
				key_type = lookupKeyType.lastResult[kya_type.selectedIndex].type_id;
				
				if ( key_type == KEY_TYPE__LOAD )
				{
					if ( role==KEY_ROLE__DRIVER || role==KEY_ROLE__CONTRACTOR || role==KEY_ROLE__LOADER )
					{
						kya_personnel.enabled = true;
					}
					else
					{
						kya_personnel.enabled = false;
					}
				}
				if ( key_type == KEY_TYPE__DRIVER )
				{
					if ( role==KEY_ROLE__DRIVER || role==KEY_ROLE__CONTRACTOR || role==KEY_ROLE__LOADER )
					{
						kya_personnel.enabled = true;
						kya_drawer.enabled = true;
						kya_supplier.enabled = true;
					}
					else
					{
						kya_personnel.enabled = false;
						kya_drawer.enabled = false;
						kya_supplier.enabled = false;
					}
				}
				if ( key_type == KEY_TYPE__PERSONNEL )
				{
					if ( role==KEY_ROLE__DRIVER || role==KEY_ROLE__CONTRACTOR || role==KEY_ROLE__LOADER )
					{
						kya_drawer.required = true;
						kya_supplier.required = true;
						//kya_drawer.validationGroup = vg;
						//kya_supplier.validationGroup = vg;
					}
					else
					{
						kya_drawer.required = false;
						kya_supplier.required = false;
						//kya_drawer.validationGroup = null;
						//kya_supplier.validationGroup = null;
						//kya_drawer.validationGroup = vg;
						//kya_supplier.validationGroup = vg;
					}
				}
				
			}
			
			protected function adjustKeyTanker():void
			{
				var owner:String;
				
				if ( this.kya_tnkr_cmpy.selectedIndex < 0 )
				{
					owner = "-1";
				}
				else
				{
					owner = lookupKeyCarrier.lastResult[kya_tnkr_cmpy.selectedIndex].cmpy_code;
				}
				
				// when it is in EDIT state, always use tanker owner to identify tanker, because GUI_ACCESS_KEYS have tanker onwer only
/* 				if ( this.currentState == "edit" )
				{
					this.carrierBtnIndex = 1;
					owner = dataGrid.selectedItem.kya_tnkr_cmpy;
				}
 */				
				if ( this.carrierBtnIndex == 0 )
				{
					owner = "0||||" + owner;
				}
				if ( this.carrierBtnIndex == 1 )
				{
					owner = "1||||" + owner;
				}
				//var txt:String;
				//txt = this.kya_tanker.selectedItem;
				lookupKeyTnkr.token = identificationAssignmentService.lookupKeyTnkr( owner );
				//this.kya_tanker.selectedItem = txt;
			}
			
			protected function adjustKeyEquipment():void
			{
				var owner:String;
				var scheduable:String;
				
				if ( this.kya_eqpt_cmpy.selectedIndex < 0 )
				{
					owner = "-1";
				}
				else
				{
					owner = lookupKeyCarrier.lastResult[kya_eqpt_cmpy.selectedIndex].cmpy_code;
				}
				
				if (kya_type.selectedIndex < 0 )
				{
					scheduable = "-1";
				}
				else
				{
					var key_type:int;
					key_type = lookupKeyType.lastResult[kya_type.selectedIndex].type_id;
					if ( key_type == KEY_TYPE__NON_SCHEDULABLE )
					{
						scheduable = "N";
					}
					else if ( key_type == KEY_TYPE__SCHEDULABLE )
					{
						scheduable = "Y";
					}
					else
					{
						scheduable = "-1";
					}
				}
				
				lookupKeyEqpt.token = identificationAssignmentService.lookupKeyEqpt( owner, scheduable);
			}
			
			protected function adjustKeyTrip():void
			{
				var supplier:String;
				
				if ( this.kya_supplier.selectedIndex < 0 )
				{
					supplier = "-1";
				}
				else
				{
					supplier = lookupKeySupplier.lastResult[kya_supplier.selectedIndex].cmpy_code;
				}
				
				lookupKeyTripNew.token = identificationAssignmentService.lookupKeyTrip( supplier, "F" );
				lookupKeyTrip.token = identificationAssignmentService.lookupKeyTrip( supplier, "-1" );
			}
			
			protected function adjustKeyCustomer():void
			{
				var supplier:String;
				
				if ( this.kya_supplier.selectedIndex < 0 )
				{
					supplier = "-1";
				}
				else
				{
					supplier = lookupKeySupplier.lastResult[kya_supplier.selectedIndex].cmpy_code;
				}
				
				lookupKeyCustomer.token = identificationAssignmentService.lookupKeyCustomer( supplier );
			}
			
			protected function adjustKeyTripOrCustomer():void
			{
				var key_type:int;
				
				key_type = lookupKeyType.lastResult[kya_type.selectedIndex].type_id;
				
				if ( key_type == KEY_TYPE__DISTRIBUTION )
				{
					adjustKeyCustomer();
				}
				if ( key_type == KEY_TYPE__SCUP_TRIP || key_type == KEY_TYPE__LOAD )
				{
					adjustKeyTrip();
				}
				
			}
			
			protected function adjustKeyOrder():void
			{
				var customer:String;
				
				if ( this.kya_cust_name.selectedIndex < 0 )
				{
					customer = "-1";
				}
				else
				{
					customer = lookupKeyCustomer.lastResult[kya_cust_name.selectedIndex].cmpy_code;
				}
				
				lookupKeyOrder.token = identificationAssignmentService.lookupKeyOrder( customer );
			}
			
			
			private function verticalScrollBarChanged(event:Event):void
			{
				if ( this.dataGrid.scroller != null)
				{
					var vs:VScrollBar;
					vs = this.dataGrid.scroller.verticalScrollBar;
					trace("this.grid.scroller.verticalScrollBar.value", vs.value, vs.maximum, vs.minimum, vs.stepSize, vs.pageSize, vs.	snapInterval);
				}
				else
				{
					trace("grid is changed");
				}
			}
			
			private function reportKeyUp(event:KeyboardEvent):void
			{
				if ( this.dataGrid.scroller != null)
				{
					var vs:VScrollBar;
					vs = this.dataGrid.scroller.verticalScrollBar;
					trace("this.grid.scroller.verticalScrollBar.value", vs.value, vs.maximum, vs.minimum, vs.stepSize, vs.pageSize, vs.	snapInterval);
				}
				else
				{
					trace("grid is changed");
				}
			}
			
			private function headerClickListener(event:GridEvent):void
			{
				if(event.column.dataField!='composition' && event.column.dataField!='compartments')
				{
					var currentRenderer:IGridItemRenderer;
					var dir:String;
					
					if ( global.sortingBySingleColumn == true )
					{	// sorted by single column only
						for (var i:int=0; i < dataGrid.columns.length; i++)
						{
							currentRenderer = dataGrid.columnHeaderGroup.getHeaderRendererAt(i);
							if ( currentRenderer != null)
							{
								(currentRenderer as DKI_HeaderColumn_Renderer).setImage('');
							}
							//(currentRenderer as DKI_HeaderColumn_Renderer).setImage(''); 
						}
					}
					else
					{	// sorted by multiple columns
						;
					}
					currentRenderer = dataGrid.columnHeaderGroup.getHeaderRendererAt(event.columnIndex);
					
					if( currentSorts.hasOwnProperty(event.column.dataField ) )
					{
						dir = currentSorts[event.column.dataField];
						if( dir=="ASC" )
						{
							dir = "DESC";
						}
						else if ( dir == "DESC" )
						{
							dir = "";
						}
						else if ( dir == "" )
						{
							dir = "ASC";
						}
						else 
						{
							dir = "ASC";
						}
						
						if ( dir != "" )
						{
							currentSorts[event.column.dataField] = dir;	
						}
						else
						{
							delete currentSorts[event.column.dataField];
							delete currentOrders[event.column.dataField];
						}
					}
					else
					{
						if ( global.sortingBySingleColumn == true )
						{	// sorted by single column only
							currentSorts = new Object();
							currentOrders = new Object();
							currentSortSeq = 0;
						}
						else
						{	// sorted by multiple columns
							;
						}
						currentSorts[event.column.dataField] = "ASC";	
						dir = currentSorts[event.column.dataField];
						currentSortSeq += 1;
						currentOrders[event.column.dataField] = currentSortSeq;	
					}
					(currentRenderer as DKI_HeaderColumn_Renderer).setImage(dir);
					this.startFiltering();
					//getPagedResult.token = identificationAssignmentService.getPaged(currentFilter,currentOrder,currentDirection, 0, 100);
					//getPagedResult.token = equipmentTypesService.getAll();
				}
			}
			
			
			protected function dataGrid_selectionChangeHandler(event:GridSelectionEvent):void
			{
				if(currentState != 'widget')
				{
					idx=dataGrid.selectedIndex;
					dataGrid.ensureCellIsVisible(idx);
					
					
					currentState = "edit";	
					this.carrierBtnIndex = 1;
					
					//kya_type.selectedIndex = dataGrid.selectedItem.kya_type;
					kya_type.selectedItem = dataGrid.selectedItem.kya_type_name;
					changeFieldStates();
					this.isCmpyPinRequired.token = identificationAssignmentService.isCmpyPinRequired(dataGrid.selectedItem.kya_key_issuer);
				}
			}
			
			protected function cancel_clickHandler():void
			{
				clearDetail();
				if ( currentState== "create" )
				{
					dataGrid.enabled=true;
				}
				currentState="normal";
				dataGrid.selectedIndex = -1;
			}			
			
			protected function selectByHandler(event:MouseEvent):void
			{
				if ((event.target as ToggleButton).selected)
					(event.target as ToggleButton).label = resourceManager.getString('default','TNKR_NAME'); 
				else
					(event.target as ToggleButton).label = resourceManager.getString('default','TNKR_CODE'); 
			}			
			
			protected function fltr_keyid_keyUpHandler(event:KeyboardEvent):void
			{
				if ( event.keyCode != 13 )
				{
					return;
				}
				if (currentState == "edit") clearDetail();
				startFiltering();
			}
			
			protected function fltr_keytnkr_keyUpHandler(event:KeyboardEvent):void
			{
				if ( event.keyCode != 13 )
				{
					return;
				}
				if (currentState == "edit") clearDetail();
				startFiltering();
			}
			
			protected function fltr_keypsnl_keyUpHandler(event:KeyboardEvent):void
			{
				if ( event.keyCode != 13 )
				{
					return;
				}
				if (currentState == "edit") clearDetail();
				startFiltering();
			}
			
			protected function fltr_keytext_keyUpHandler(event:KeyboardEvent):void
			{
				if ( event.keyCode != 13 )
				{
					return;
				}
				if (currentState == "edit") clearDetail();
				startFiltering();
			}
			
			protected function fltr_terminal_changeHandler(event:IndexChangeEvent):void
			{
				if (currentState == "edit") clearDetail();
				startFiltering();
			}
			
			protected function fltr_issuer_changeHandler(event:IndexChangeEvent):void
			{
				if (currentState == "edit") clearDetail();
				startFiltering();
			}
			
			protected function fltr_type_changeHandler(event:IndexChangeEvent):void
			{
				if (currentState == "edit") clearDetail();
				startFiltering();
			}
			
			private function startFiltering():void
			{
				var issuerFilter:String = '';  
				var typeFilter:String = '';
				var keyidFilter:String = '';
				var keytnkrFilter:String = '';
				var keypsnlFilter:String = '';
				var keytextFilter:String = '';
				var fields:Object=new Object();
				var types:Object=new Object();
				
				if (fltr_issuer.selectedIndex > -1) 
				{
					issuerFilter = "kya_key_issuer='"+lookupKeyIssuer.lastResult[fltr_issuer.selectedIndex].cmpy_code+"' ";
					fields["kya_key_issuer"] = lookupKeyIssuer.lastResult[fltr_issuer.selectedIndex].cmpy_code;
					if ( fields["kya_key_issuer"] == "ANY" )
					{
						issuerFilter = '';
						fields["kya_key_issuer"] = "";
					}
				}
				else
				{
					if ( global.setComboBoxNoSelection == true )
					{
						fltr_issuer.selectedIndex = -1;
					}
					issuerFilter = '';
					fields["kya_key_issuer"] = "";
				}
				types["kya_key_issuer"] = "EXACT_STRING";
				
				if (fltr_type.selectedIndex > -1) 
				{
					typeFilter = "kya_type="+lookupKeyType.lastResult[fltr_type.selectedIndex].type_id+" ";
					fields["kya_type"] = lookupKeyType.lastResult[fltr_type.selectedIndex].type_id;
				}
				else
				{
					if ( global.setComboBoxNoSelection == true )
					{
						fltr_type.selectedIndex = -1;
					}
					typeFilter = '';
					fields["kya_type"] = "";
				}
				types["kya_type"] = "NUMBER";
				
				
				if ( this.currentState != "widget" )
				{
					if(fltr_keyid.text!='')
					{					
						keyidFilter = "kya_key_no = " + fltr_keyid.text + " ";
						fields["kya_key_no"] = fltr_keyid.text;
					}
					else
					{
						keyidFilter = '';
						fields["kya_key_no"] = "";
						//fields["kya_txt"] = "";
					}
					types["kya_key_no"] = "NUMBER";
					
					if(fltr_keytnkr.text!='')
					{					
						keytnkrFilter = "((UPPER(kya_tanker) LIKE UPPER('%"+(fltr_keytnkr.text)+"%') ) or " 
							+ "(UPPER(kya_tnkr_name) LIKE UPPER('%"+(fltr_keytnkr.text)+"%') )) ";
						fields["kya_tanker||kya_tnkr_name"] = fltr_keytnkr.text+"||"+fltr_keytnkr.text;
					}
					else
					{
						keytnkrFilter = '';
						fields["kya_tanker||kya_tnkr_name"] = "";
					}
					types["kya_tanker||kya_tnkr_name"] = "STRING||STRING";
					
					if(fltr_keypsnl.text!='')
					{					
						keypsnlFilter = "((UPPER(kya_personnel) LIKE UPPER('%"+(fltr_keypsnl.text)+"%') ) or " 
							+ "(UPPER(kya_psnl_name) LIKE UPPER('%"+(fltr_keypsnl.text)+"%') )) ";
						fields["kya_personnel||kya_psnl_name"] = fltr_keypsnl.text+"||"+fltr_keypsnl.text;
					}
					else
					{
						keypsnlFilter = '';
						fields["kya_personnel||kya_psnl_name"] = "";
					}
					types["kya_personnel||kya_psnl_name"] = "STRING||STRING";
					
					if(fltr_keytext.text!='')
					{					
						keytextFilter = "(UPPER(kya_txt) LIKE UPPER('%"+(fltr_keytext.text)+"%') ) ";
						fields["kya_txt"] = fltr_keytext.text;
					}
					else
					{
						keytextFilter = '';
						fields["kya_txt"] = "";
					}
					types["kya_txt"] = "STRING";
				}

				
				currentFilter = "WHERE 1=1 ";
				if ( keyidFilter.length > 0 )
				{
					currentFilter += "AND " + keyidFilter;
				}
				if ( keytnkrFilter.length > 0 )
				{
					currentFilter += "AND " + keytnkrFilter;
				}
				if ( keypsnlFilter.length > 0 )
				{
					currentFilter += "AND " + keypsnlFilter;
				}
				if ( keytextFilter.length > 0 )
				{
					currentFilter += "AND " + keytextFilter;
				}
				if ( issuerFilter.length > 0 )
				{
					currentFilter += "AND " + issuerFilter;
				}
				if ( typeFilter.length > 0 )
				{
					currentFilter += "AND " + typeFilter;
				}
				currentFields = fields;
				currentTypes = types;
				//				getPagedResult.token = identificationAssignmentService.getPaged(currentFilter,currentOrder, currentDirection);
				getPagedResult.token = identificationAssignmentService.getPaged( currentFields, currentTypes, currentSorts, currentOrders);
				
				trace("this.grid.scroller3333", this.dataGrid.scroller);
				trace("this.grid.scroller.verticalScrollBar.value", this.dataGrid.scroller.verticalScrollBar.value);
			}
			
			private function findByCode(code:String):void
			{
				var fields:Object;
				var types:Object;
				
				fields = new Object();
				types = new Object();
				
				fields["kya_txt"] = code;
				types["kya_txt"] = "STRING";
				
				getPagedResult.token = identificationAssignmentService.getPaged( fields, types, currentSorts, currentOrders);
			}
			
			protected function refreshRecords(event:MouseEvent):void
			{
				if ( currentState != "widget" )
				{
					currentState = 'normal';
					dataGrid.enabled=true;
				}
				clearDetail();
				fltr_issuer.selectedIndex = -1;
				fltr_type.selectedIndex = -1;
				if ( currentState != "widget" )
				{
					fltr_keyid.text = '';
					fltr_keytnkr.text = '';
					fltr_keypsnl.text = '';
					fltr_keytext.text = '';
				}
				dataGrid.selectedIndex = -1;
				currentFilter = null;
				currentOrder = null;
				currentFields = new Object();
				currentTypes = new Object();
				
				currentSorts = new Object();
				currentOrders = new Object();
				var currentRenderer:IGridItemRenderer;
				for (var i:int=0; i < dataGrid.columns.length; i++)
				{
					currentRenderer = dataGrid.columnHeaderGroup.getHeaderRendererAt(i);
					if ( currentRenderer != null)
					{
						(currentRenderer as DKI_HeaderColumn_Renderer).setImage('');
					}
					//(currentRenderer as DKI_HeaderColumn_Renderer).setImage(''); 
				}

				getPagedResult.token = identificationAssignmentService.getPaged( currentFields, currentTypes, currentSorts, currentOrders);
				trace("this.grid.scroller2222", this.dataGrid.scroller);
				trace("this.grid.scroller.verticalScrollBar.value", this.dataGrid.scroller.verticalScrollBar.value);
			}
			
			protected function clearDetail(): void
			{
				if (currentState != 'widget')
				{
					/*
					if(tnkr_codeTextInput)
					{
					tnkr_codeTextInput.text='';
					tnkr_base_siteTextInput.text='';
					equipment_nameTextInput.text='';
					tnkr_carrier_name.selectedIndex=-1;
					tnkr_manager_name.selectedIndex=-1;
					tnkr_licence_expiry.selectedDate=null;
					tnkr_dglic_exp.selectedDate=null;
					tnkr_ins_exp.selectedDate=null;
					tnkr_lock.selected=false;
					tnkr_active.selected=false;
					tnkr_bay_loop_ch.selected=false;
					depot1.selectedIndex=-1;
					depot2.selectedIndex=-1;
					depot3.selectedIndex=-1;
					tnkr_promptTextInput.text='';
					tnkr_tripsTextInput.text='';
					}
					*/
				}
			}			
			
			private function changeFieldStates():void
			{
				/*
				kya_key_no=id
				kya_key_issuer=issuer code	kya_issuer_name=issuer
				kya_type=type code	kya_type_name=assignment type
				kya_phys_type=phys type code	kya_phys_name=physical type
				kya_timecode=time code	
				kya_txt=physical tag
				kya_key_created=date created
				kya_pin=pin
				kya_pin_changed=pin changed
				kya_lock=locked?
				kya_adhoc=Adhoc?
				
				kya_psnl_cmpy=employer code	kya_psnl_cmpy_name=employer
				kya_personnel=psnl code	kya_psnl_name=personnel
				kya_role=role id	kya_role_name=role
				kya_supplier=supp code	kya_supp_name=supplier
				kya_drawer=drawer code	kya_draw_name=drawer
				
				kya_tnkr_cmpy=tnkr owner code	kya_tnkr_cmpy_name=tnkr owner
				kya_tanker=tnkr code	kya_tnkr_name=tanker
				kya_load_site=terminal code	kya_site_name=terminal
				kya_alloc_type=alloc type code	kya_alloc_type_name=alloc type
				kya_alloc_cmpy=alloc cmpy code	kya_alloc_cmpy_name=alloc company
				
				kya_equipment=eqpt code	kya_eqpt_name=transp equipment
				kya_eqpt_cmpy=eqpt owner code	kya_eqpt_cmpy_name=eqpt owner
				kya_load_id=load id
				kya_cust_name=customer
				kya_order_no=order id	kya_cust_ordno=order no
				*/
				
				if ( currentState == "create" )
				{
					kya_key_no.enabled = true;
					kya_key_issuer.enabled = true;
				}
				else
				{
					kya_key_no.enabled = false;
					kya_key_issuer.enabled = false;
				}
				
				var key_type:int;
				if (kya_type.selectedIndex == -1 )
				{
					key_type = -1;
				}
				else
				{
					key_type = lookupKeyType.lastResult[kya_type.selectedIndex].type_id;
				}
				
				kya_phys_type.enabled = true;
				kya_timecode.enabled = true;
				// to support 3 required input in card 2
				if(kya_phys_type.selectedItem.phys_type_id != 2){
					kya_txt.enabled = true;
				}
				kya_pin.enabled = false;
				kya_key_created.enabled = false;
				kya_pin_changed.enabled = false;
				kya_lock.enabled = true;
				kya_adhoc.enabled = true;
				
				switch ( key_type )
				{
					case KEY_TYPE__SUPERVISOR:
						kya_psnl_cmpy.enabled = true;
						kya_personnel.enabled = true;
						kya_role.enabled = true;
						kya_drawer.enabled = false;
						
						kya_supplier.enabled = false;
						kya_trip_no.enabled = false;
						kya_load_site.enabled = false;
						kya_load_id.enabled = false;
						
						btn_kya_tnkr_cmpy.enabled = false;
						kya_tnkr_cmpy.enabled = false;
						kya_tanker.enabled = false;
						kya_eqpt_cmpy.enabled = false;
						kya_equipment.enabled = false;
						
						kya_alloc_type.enabled = false;
						kya_alloc_cmpy.enabled = false;
						kya_cust_name.enabled = false;
						kya_order_no.enabled = false;
						
						adjustKeyPersonnel();
						break;
					case KEY_TYPE__DRIVER:
						kya_psnl_cmpy.enabled = true;
						kya_personnel.enabled = true;
						kya_role.enabled = true;
						kya_drawer.enabled = true;
						
						kya_supplier.enabled = true;
						kya_trip_no.enabled = false;
						kya_load_site.enabled = false;
						kya_load_id.enabled = false;
						
						btn_kya_tnkr_cmpy.enabled = false;
						kya_tnkr_cmpy.enabled = false;
						kya_tanker.enabled = false;
						kya_eqpt_cmpy.enabled = false;
						kya_equipment.enabled = false;
						
						kya_alloc_type.enabled = false;
						kya_alloc_cmpy.enabled = false;
						kya_cust_name.enabled = false;
						kya_order_no.enabled = false;
						
						adjustKeyPersonnel();
						break;
					case KEY_TYPE__PERSONNEL:
						kya_psnl_cmpy.enabled = true;
						kya_personnel.enabled = true;
						kya_role.enabled = true;
						kya_drawer.enabled = true;
						
						kya_supplier.enabled = true;
						kya_trip_no.enabled = false;
						kya_load_site.enabled = false;
						kya_load_id.enabled = false;
						
						btn_kya_tnkr_cmpy.enabled = false;
						kya_tnkr_cmpy.enabled = false;
						kya_tanker.enabled = false;
						kya_eqpt_cmpy.enabled = false;
						kya_equipment.enabled = false;
						
						kya_alloc_type.enabled = false;
						kya_alloc_cmpy.enabled = false;
						kya_cust_name.enabled = false;
						kya_order_no.enabled = false;
						
						adjustKeyPersonnel();
						break;
					case KEY_TYPE__TANKER:
						kya_psnl_cmpy.enabled = false;
						kya_personnel.enabled = false;
						kya_role.enabled = false;
						kya_drawer.enabled = false;
						
						kya_supplier.enabled = false;
						kya_trip_no.enabled = false;
						kya_load_site.enabled = false;
						kya_load_id.enabled = false;
						
						btn_kya_tnkr_cmpy.enabled = true;
						kya_tnkr_cmpy.enabled = true;
						kya_tanker.enabled = true;
						kya_eqpt_cmpy.enabled = false;
						kya_equipment.enabled = false;
						
						kya_alloc_type.enabled = false;
						kya_alloc_cmpy.enabled = false;
						kya_cust_name.enabled = false;
						kya_order_no.enabled = false;
						
						adjustKeyTanker();
						break;
					case KEY_TYPE__COMBINATION:
						kya_psnl_cmpy.enabled = true;
						kya_personnel.enabled = true;
						kya_role.enabled = true;
						kya_drawer.enabled = true;
						
						kya_supplier.enabled = true;
						kya_trip_no.enabled = false;
						kya_load_site.enabled = false;
						kya_load_id.enabled = false;
						
						btn_kya_tnkr_cmpy.enabled = true;
						kya_tnkr_cmpy.enabled = true;
						kya_tanker.enabled = true;
						kya_eqpt_cmpy.enabled = false;
						kya_equipment.enabled = false;
						
						kya_alloc_type.enabled = false;
						kya_alloc_cmpy.enabled = false;
						kya_cust_name.enabled = false;
						kya_order_no.enabled = false;
						
						adjustKeyPersonnel();
						adjustKeyTanker();
						break;
					case KEY_TYPE__RAIL_LOADER:
						kya_psnl_cmpy.enabled = true;
						kya_personnel.enabled = true;
						kya_role.enabled = true;
						kya_drawer.enabled = true;
						
						kya_supplier.enabled = true;
						kya_trip_no.enabled = false;
						kya_load_site.enabled = false;
						kya_load_id.enabled = false;
						
						btn_kya_tnkr_cmpy.enabled = false;
						kya_tnkr_cmpy.enabled = false;
						kya_tanker.enabled = false;
						kya_eqpt_cmpy.enabled = false;
						kya_equipment.enabled = false;
						
						kya_alloc_type.enabled = false;
						kya_alloc_cmpy.enabled = false;
						kya_cust_name.enabled = false;
						kya_order_no.enabled = false;
						
						adjustKeyPersonnel();
						break;
					case KEY_TYPE__SCUP_TRIP:
						kya_psnl_cmpy.enabled = false;
						kya_personnel.enabled = false;
						kya_role.enabled = false;
						kya_drawer.enabled = false;
						
						kya_supplier.enabled = true;
						kya_trip_no.enabled = true;
						kya_load_site.enabled = false;
						kya_load_id.enabled = false;
						
						btn_kya_tnkr_cmpy.enabled = false;
						kya_tnkr_cmpy.enabled = false;
						kya_tanker.enabled = false;
						kya_alloc_type.enabled = false;
						kya_alloc_cmpy.enabled = false;
						
						kya_eqpt_cmpy.enabled = false;
						kya_equipment.enabled = false;
						kya_cust_name.enabled = false;
						kya_order_no.enabled = false;
						break;
					case KEY_TYPE__SCHEDULABLE:
						kya_psnl_cmpy.enabled = false;
						kya_personnel.enabled = false;
						kya_role.enabled = false;
						kya_drawer.enabled = false;
						
						kya_supplier.enabled = false;
						kya_trip_no.enabled = false;
						kya_load_site.enabled = false;
						kya_load_id.enabled = false;
						
						btn_kya_tnkr_cmpy.enabled = false;
						kya_tnkr_cmpy.enabled = false;
						kya_tanker.enabled = false;
						kya_eqpt_cmpy.enabled = true;
						kya_equipment.enabled = true;
						
						kya_alloc_type.enabled = false;
						kya_alloc_cmpy.enabled = false;
						kya_cust_name.enabled = false;
						kya_order_no.enabled = false;
						
						this.adjustKeyEquipment();
						break;
					case KEY_TYPE__NON_SCHEDULABLE:
						kya_psnl_cmpy.enabled = false;
						kya_personnel.enabled = false;
						kya_role.enabled = false;
						kya_drawer.enabled = false;
						
						kya_supplier.enabled = false;
						kya_trip_no.enabled = false;
						kya_load_site.enabled = false;
						kya_load_id.enabled = false;
						
						btn_kya_tnkr_cmpy.enabled = false;
						kya_tnkr_cmpy.enabled = false;
						kya_tanker.enabled = false;
						kya_eqpt_cmpy.enabled = true;
						kya_equipment.enabled = true;
						
						kya_alloc_type.enabled = false;
						kya_alloc_cmpy.enabled = false;
						kya_cust_name.enabled = false;
						kya_order_no.enabled = false;
						
						this.adjustKeyEquipment();
						break;
					case KEY_TYPE__LOAD:
						kya_psnl_cmpy.enabled = true;
						kya_personnel.enabled = true;
						kya_role.enabled = true;
						kya_drawer.enabled = false;
						
						kya_supplier.enabled = true;
						kya_trip_no.enabled = true;
						kya_load_site.enabled = false;//true;
						kya_load_id.enabled = false;//true;
						
						btn_kya_tnkr_cmpy.enabled = false;//true;
						kya_tnkr_cmpy.enabled = false;//true;
						kya_tanker.enabled = false;//true;
						kya_eqpt_cmpy.enabled = false;
						kya_equipment.enabled = false;
						
						kya_alloc_type.enabled = false;
						kya_alloc_cmpy.enabled = false;
						kya_cust_name.enabled = false;
						kya_order_no.enabled = false;
						
						//adjustKeyPersonnel();
						//adjustKeyTanker();
						adjustKeyTrip();
						break;
					case KEY_TYPE__ALLOCATION:
						kya_psnl_cmpy.enabled = false;
						kya_personnel.enabled = false;
						kya_role.enabled = false;
						kya_drawer.enabled = true;
						
						kya_supplier.enabled = true;
						kya_trip_no.enabled = false;
						kya_load_site.enabled = false;
						kya_load_id.enabled = false;
						
						btn_kya_tnkr_cmpy.enabled = false;
						kya_tnkr_cmpy.enabled = false;
						kya_tanker.enabled = false;
						kya_eqpt_cmpy.enabled = false;
						kya_equipment.enabled = false;
						
						kya_alloc_type.enabled = true;
						kya_alloc_cmpy.enabled = true;
						kya_cust_name.enabled = false;
						kya_order_no.enabled = false;
						
						adjustKeyAllocCompany();
						break;
					case KEY_TYPE__DISTRIBUTION:
						kya_psnl_cmpy.enabled = false;
						kya_personnel.enabled = false;
						kya_role.enabled = false;
						kya_drawer.enabled = true;
						
						kya_supplier.enabled = true;
						kya_trip_no.enabled = false;
						kya_load_site.enabled = false;
						kya_load_id.enabled = false;
						
						btn_kya_tnkr_cmpy.enabled = false;
						kya_tnkr_cmpy.enabled = false;
						kya_tanker.enabled = false;
						kya_eqpt_cmpy.enabled = false;
						kya_equipment.enabled = false;
						
						kya_alloc_type.enabled = false;
						kya_alloc_cmpy.enabled = false;
						kya_cust_name.enabled = true;
						kya_order_no.enabled = true;
						
						adjustKeyCustomer();
						adjustKeyOrder();
						break;
					case KEY_TYPE__UNASSIGNED:
					default :
						kya_psnl_cmpy.enabled = false;
						kya_personnel.enabled = false;
						kya_role.enabled = false;
						kya_drawer.enabled = false;
						
						kya_supplier.enabled = false;
						kya_trip_no.enabled = false;
						kya_load_site.enabled = false;
						kya_load_id.enabled = false;
						
						btn_kya_tnkr_cmpy.enabled = false;
						kya_tnkr_cmpy.enabled = false;
						kya_tanker.enabled = false;
						kya_eqpt_cmpy.enabled = false;
						kya_equipment.enabled = false;
						
						kya_alloc_type.enabled = false;
						kya_alloc_cmpy.enabled = false;
						kya_cust_name.enabled = false;
						kya_order_no.enabled = false;
						break;
				}
				
				// change the default option of drop down list
				if ( kya_psnl_cmpy.enabled == true && kya_psnl_cmpy.selectedIndex==-1)
				{
					kya_psnl_cmpy.selectedIndex = kya_psnl_cmpy.dataProvider.length==1?0:-1;
				}
				else
				{
					if (kya_psnl_cmpy.enabled == false)
					{
						kya_psnl_cmpy.selectedIndex = -1;
					}
				}
				/*
				if ( kya_role.enabled == true && kya_role.selectedIndex==-1)
				{
					kya_role.selectedIndex = kya_role.dataProvider.length==1?0:-1;
				}
				else
				{
					if (kya_role.enabled == false)
					{
						kya_role.selectedIndex = -1;
					}
				}
				*/
				if ( kya_personnel.enabled == true && kya_personnel.selectedIndex==-1)
				{
					kya_personnel.selectedIndex = kya_personnel.dataProvider.length==1?0:-1;
				}
				else
				{
					if (kya_personnel.enabled == false)
					{
						kya_personnel.selectedIndex = -1;
					}
				}
				if ( kya_drawer.enabled == true && kya_drawer.selectedIndex==-1)
				{
					kya_drawer.selectedIndex = kya_drawer.dataProvider.length==1?0:-1;
				}
				else
				{
					if (kya_drawer.enabled == false)
					{
						kya_drawer.selectedIndex = -1;
					}
				}
				if ( kya_supplier.enabled == true && kya_supplier.selectedIndex==-1)
				{
					kya_supplier.selectedIndex = kya_supplier.dataProvider.length==1?0:-1;
				}
				else
				{
					if (kya_supplier.enabled == false)
					{
						kya_supplier.selectedIndex = -1;
					}
				}
				if ( kya_tnkr_cmpy.enabled == true && kya_tnkr_cmpy.selectedIndex==-1)
				{
					kya_tnkr_cmpy.selectedIndex = kya_tnkr_cmpy.dataProvider.length==1?0:-1;
				}
				else
				{
					if (kya_tnkr_cmpy.enabled == false)
					{
						kya_tnkr_cmpy.selectedIndex = -1;
					}
				}
				if ( kya_tanker.enabled == true && kya_tanker.selectedIndex==-1)
				{
					kya_tanker.selectedIndex = kya_tanker.dataProvider.length==1?0:-1;
				}
				else
				{
					if (kya_tanker.enabled == false)
					{
						kya_tanker.selectedIndex = -1;
					}
				}
				if ( kya_eqpt_cmpy.enabled == true && kya_eqpt_cmpy.selectedIndex==-1)
				{
					kya_eqpt_cmpy.selectedIndex = kya_eqpt_cmpy.dataProvider.length==1?0:-1;
				}
				else
				{
					if (kya_eqpt_cmpy.enabled == false)
					{
						kya_eqpt_cmpy.selectedIndex = -1;
					}
				}
				if ( kya_equipment.enabled == true && kya_equipment.selectedIndex==-1)
				{
					kya_equipment.selectedIndex = kya_equipment.dataProvider.length==1?0:-1;
				}
				else
				{
					if (kya_equipment.enabled == false)
					{
						kya_equipment.selectedIndex = -1;
					}
				}
				
				
				var key_role_id:int;
				if (kya_role.selectedIndex>=0)
				{
					key_role_id = lookupKeyRole.lastResult[kya_role.selectedIndex].role_id;
				}
				else
				{
					key_role_id = -1; //dataGrid.selectedItem.kya_role;
				}
				
				
				changeValidatorStates( key_type, key_role_id );
				//changeValidatorGroup( key_type, key_role_id );
			}
			
			private function changeValidatorStates(key_type:int, key_role_id:int):void
			{
				kya_key_no.required = true;
				kya_key_issuer.required = true;
				kya_type.required = true;
				kya_phys_type.required = true;
				kya_timecode.required = true;
				kya_txt.required = true;
				//kya_key_created.required = false;
				kya_pin.required = false;
				//kya_pin_changed.required = false;
				//kya_lock.required = true;
				//kya_adhoc.required = true;
				
				switch ( key_type )
				{
					case KEY_TYPE__SUPERVISOR:
						kya_psnl_cmpy.required = true;
						kya_personnel.required = true;
						kya_role.required = true;
						kya_drawer.required = false;
						
						kya_supplier.required = false;
						kya_trip_no.required = false;
						kya_load_site.required = false;
						kya_load_id.required = false;
						
						kya_tnkr_cmpy.required = false;
						kya_tanker.required = false;
						kya_eqpt_cmpy.required = false;
						kya_equipment.required = false;
						
						kya_alloc_type.required = false;
						kya_alloc_cmpy.required = false;
						kya_cust_name.required = false;
						kya_order_no.required = false;
						break;
					case KEY_TYPE__DRIVER:
						kya_psnl_cmpy.required = true;
						kya_personnel.required = true;
						kya_role.required = true;
						kya_drawer.required = true;
						
						kya_supplier.required = true;
						kya_trip_no.required = false;
						kya_load_site.required = false;
						kya_load_id.required = false;
						
						kya_tnkr_cmpy.required = false;
						kya_tanker.required = false;
						kya_eqpt_cmpy.required = false;
						kya_equipment.required = false;
						
						kya_alloc_type.required = false;
						kya_alloc_cmpy.required = false;
						kya_cust_name.required = false;
						kya_order_no.required = false;
						break;
					case KEY_TYPE__PERSONNEL:
						kya_psnl_cmpy.required = true;
						kya_personnel.required = true;
						kya_role.required = true;
						
						if ( key_role_id==KEY_ROLE__DRIVER || key_role_id==KEY_ROLE__CONTRACTOR || key_role_id==KEY_ROLE__LOADER )
						{
							kya_drawer.required = true;
							kya_supplier.required = true;
						}
						else
						{
							kya_drawer.required = false;
							kya_supplier.required = false;
						}
							
						kya_trip_no.required = false;
						kya_load_site.required = false;
						kya_load_id.required = false;
						
						kya_tnkr_cmpy.required = false;
						kya_tanker.required = false;
						kya_eqpt_cmpy.required = false;
						kya_equipment.required = false;
						
						kya_alloc_type.required = false;
						kya_alloc_cmpy.required = false;
						kya_cust_name.required = false;
						kya_order_no.required = false;
						break;
					case KEY_TYPE__TANKER:
						kya_psnl_cmpy.required = false;
						kya_personnel.required = false;
						kya_role.required = false;
						kya_drawer.required = false;
						
						kya_supplier.required = false;
						kya_trip_no.required = false;
						kya_load_site.required = false;
						kya_load_id.required = false;
						
						kya_tnkr_cmpy.required = true;
						kya_tanker.required = true;
						kya_eqpt_cmpy.required = false;
						kya_equipment.required = false;
						
						kya_alloc_type.required = false;
						kya_alloc_cmpy.required = false;
						kya_cust_name.required = false;
						kya_order_no.required = false;
						break;
					case KEY_TYPE__COMBINATION:
						kya_psnl_cmpy.required = true;
						kya_personnel.required = true;
						kya_role.required = true;
						kya_drawer.required = true;
						
						kya_supplier.required = true;
						kya_trip_no.required = false;
						kya_load_site.required = false;
						kya_load_id.required = false;
						
						kya_tnkr_cmpy.required = true;
						kya_tanker.required = true;
						kya_eqpt_cmpy.required = false;
						kya_equipment.required = false;
						
						kya_alloc_type.required = false;
						kya_alloc_cmpy.required = false;
						kya_cust_name.required = false;
						kya_order_no.required = false;
						break;
					case KEY_TYPE__RAIL_LOADER:
						kya_psnl_cmpy.required = true;
						kya_personnel.required = true;
						kya_role.required = true;
						kya_drawer.required = true;
						
						kya_supplier.required = true;
						kya_trip_no.required = false;
						kya_load_site.required = false;
						kya_load_id.required = false;
						
						kya_tnkr_cmpy.required = false;
						kya_tanker.required = false;
						kya_eqpt_cmpy.required = false;
						kya_equipment.required = false;
						
						kya_alloc_type.required = false;
						kya_alloc_cmpy.required = false;
						kya_cust_name.required = false;
						kya_order_no.required = false;
						break;
					case KEY_TYPE__SCUP_TRIP:
						kya_psnl_cmpy.required = false;
						kya_personnel.required = false;
						kya_role.required = false;
						kya_drawer.required = false;
						
						kya_supplier.required = true;
						kya_trip_no.required = true;
						kya_load_site.required = false;
						kya_load_id.required = false;
						
						kya_tnkr_cmpy.required = false;
						kya_tanker.required = false;
						kya_alloc_type.required = false;
						kya_alloc_cmpy.required = false;
						
						kya_eqpt_cmpy.required = false;
						kya_equipment.required = false;
						kya_cust_name.required = false;
						kya_order_no.required = false;
						break;
					case KEY_TYPE__SCHEDULABLE:
						kya_psnl_cmpy.required = false;
						kya_personnel.required = false;
						kya_role.required = false;
						kya_drawer.required = false;
						
						kya_supplier.required = false;
						kya_trip_no.required = false;
						kya_load_site.required = false;
						kya_load_id.required = false;
						
						kya_tnkr_cmpy.required = false;
						kya_tanker.required = false;
						kya_eqpt_cmpy.required = true;
						kya_equipment.required = true;
						
						kya_alloc_type.required = false;
						kya_alloc_cmpy.required = false;
						kya_cust_name.required = false;
						kya_order_no.required = false;
						break;
					case KEY_TYPE__NON_SCHEDULABLE:
						kya_psnl_cmpy.required = false;
						kya_personnel.required = false;
						kya_role.required = false;
						kya_drawer.required = false;
						
						kya_supplier.required = false;
						kya_trip_no.required = false;
						kya_load_site.required = false;
						kya_load_id.required = false;
						
						kya_tnkr_cmpy.required = false;
						kya_tanker.required = false;
						kya_eqpt_cmpy.required = true;
						kya_equipment.required = true;
						
						kya_alloc_type.required = false;
						kya_alloc_cmpy.required = false;
						kya_cust_name.required = false;
						kya_order_no.required = false;
						break;
					case KEY_TYPE__LOAD:
						kya_psnl_cmpy.required = true;
						kya_personnel.required = true;
						kya_role.required = true;
						kya_drawer.required = false;
						
						kya_supplier.required = true;
						kya_trip_no.required = true;
						kya_load_site.required = false;//true;
						kya_load_id.required = false;//true;
						
						kya_tnkr_cmpy.required = false;//true;
						kya_tanker.required = false;//true;
						kya_eqpt_cmpy.required = false;
						kya_equipment.required = false;
						
						kya_alloc_type.required = false;
						kya_alloc_cmpy.required = false;
						kya_cust_name.required = false;
						kya_order_no.required = false;
						break;
					case KEY_TYPE__ALLOCATION:
						kya_psnl_cmpy.required = false;
						kya_personnel.required = false;
						kya_role.required = false;
						kya_drawer.required = true;
						
						kya_supplier.required = true;
						kya_trip_no.required = false;
						kya_load_site.required = false;
						kya_load_id.required = false;
						
						kya_tnkr_cmpy.required = false;
						kya_tanker.required = false;
						kya_eqpt_cmpy.required = false;
						kya_equipment.required = false;
						
						kya_alloc_type.required = true;
						kya_alloc_cmpy.required = true;
						kya_cust_name.required = false;
						kya_order_no.required = false;
						break;
					case KEY_TYPE__DISTRIBUTION:
						kya_psnl_cmpy.required = false;
						kya_personnel.required = false;
						kya_role.required = false;
						kya_drawer.required = true;
						
						kya_supplier.required = true;
						kya_trip_no.required = false;
						kya_load_site.required = false;
						kya_load_id.required = false;
						
						kya_tnkr_cmpy.required = false;
						kya_tanker.required = false;
						kya_eqpt_cmpy.required = false;
						kya_equipment.required = false;
						
						kya_alloc_type.required = false;
						kya_alloc_cmpy.required = false;
						kya_cust_name.required = true;
						kya_order_no.required = true;
						break;
					case KEY_TYPE__UNASSIGNED:
					default :
						kya_psnl_cmpy.required = false;
						kya_personnel.required = false;
						kya_role.required = false;
						kya_drawer.required = false;
						
						kya_supplier.required = false;
						kya_trip_no.required = false;
						kya_load_site.required = false;
						kya_load_id.required = false;
						
						kya_tnkr_cmpy.required = false;
						kya_tanker.required = false;
						kya_eqpt_cmpy.required = false;
						kya_equipment.required = false;
						
						kya_alloc_type.required = false;
						kya_alloc_cmpy.required = false;
						kya_cust_name.required = false;
						kya_order_no.required = false;
						break;
				}
				
			}
			
			private function changeValidatorGroup(key_type:int, key_role_id:int):void
			{
				kya_key_no.validationGroup = vg;
				kya_key_issuer.validationGroup = vg;
				kya_type.validationGroup = vg;
				kya_phys_type.validationGroup = vg;
				kya_timecode.validationGroup = vg;
				kya_txt.validationGroup = vg;
				//kya_key_created.validationGroup = null;
				kya_pin.validationGroup = null;
				//kya_pin_changed.validationGroup = null;
				//kya_lock.validationGroup = vg;
				//kya_adhoc.validationGroup = vg;
				
				switch ( key_type )
				{
					case KEY_TYPE__SUPERVISOR:
						kya_psnl_cmpy.validationGroup = vg;
						kya_personnel.validationGroup = vg;
						kya_role.validationGroup = vg;
						kya_drawer.validationGroup = null;
						
						kya_supplier.validationGroup = null;
						kya_trip_no.validationGroup = null;
						kya_load_site.validationGroup = null;
						kya_load_id.validationGroup = null;
						
						kya_tnkr_cmpy.validationGroup = null;
						kya_tanker.validationGroup = null;
						kya_eqpt_cmpy.validationGroup = null;
						kya_equipment.validationGroup = null;
						
						kya_alloc_type.validationGroup = null;
						kya_alloc_cmpy.validationGroup = null;
						kya_cust_name.validationGroup = null;
						kya_order_no.validationGroup = null;
						break;
					case KEY_TYPE__DRIVER:
						kya_psnl_cmpy.validationGroup = vg;
						kya_personnel.validationGroup = vg;
						kya_role.validationGroup = vg;
						kya_drawer.validationGroup = vg;
						
						kya_supplier.validationGroup = vg;
						kya_trip_no.validationGroup = null;
						kya_load_site.validationGroup = null;
						kya_load_id.validationGroup = null;
						
						kya_tnkr_cmpy.validationGroup = null;
						kya_tanker.validationGroup = null;
						kya_eqpt_cmpy.validationGroup = null;
						kya_equipment.validationGroup = null;
						
						kya_alloc_type.validationGroup = null;
						kya_alloc_cmpy.validationGroup = null;
						kya_cust_name.validationGroup = null;
						kya_order_no.validationGroup = null;
						break;
					case KEY_TYPE__PERSONNEL:
						kya_psnl_cmpy.validationGroup = vg;
						kya_personnel.validationGroup = vg;
						kya_role.validationGroup = vg;
						
						if ( key_role_id==KEY_ROLE__DRIVER || key_role_id==KEY_ROLE__CONTRACTOR || key_role_id==KEY_ROLE__LOADER )
						{
							kya_drawer.validationGroup = vg;
							kya_supplier.validationGroup = vg;
						}
						else
						{
							//kya_drawer.validationGroup = null;
							//kya_supplier.validationGroup = null;
							kya_drawer.validationGroup = vg;
							kya_supplier.validationGroup = vg;
						}
						
						kya_trip_no.validationGroup = null;
						kya_load_site.validationGroup = null;
						kya_load_id.validationGroup = null;
						
						kya_tnkr_cmpy.validationGroup = null;
						kya_tanker.validationGroup = null;
						kya_eqpt_cmpy.validationGroup = null;
						kya_equipment.validationGroup = null;
						
						kya_alloc_type.validationGroup = null;
						kya_alloc_cmpy.validationGroup = null;
						kya_cust_name.validationGroup = null;
						kya_order_no.validationGroup = null;
						break;
					case KEY_TYPE__TANKER:
						kya_psnl_cmpy.validationGroup = null;
						kya_personnel.validationGroup = null;
						kya_role.validationGroup = null;
						kya_drawer.validationGroup = null;
						
						kya_supplier.validationGroup = null;
						kya_trip_no.validationGroup = null;
						kya_load_site.validationGroup = null;
						kya_load_id.validationGroup = null;
						
						kya_tnkr_cmpy.validationGroup = vg;
						kya_tanker.validationGroup = vg;
						kya_eqpt_cmpy.validationGroup = null;
						kya_equipment.validationGroup = null;
						
						kya_alloc_type.validationGroup = null;
						kya_alloc_cmpy.validationGroup = null;
						kya_cust_name.validationGroup = null;
						kya_order_no.validationGroup = null;
						break;
					case KEY_TYPE__COMBINATION:
						kya_psnl_cmpy.validationGroup = vg;
						kya_personnel.validationGroup = vg;
						kya_role.validationGroup = vg;
						kya_drawer.validationGroup = vg;
						
						kya_supplier.validationGroup = vg;
						kya_trip_no.validationGroup = null;
						kya_load_site.validationGroup = null;
						kya_load_id.validationGroup = null;
						
						kya_tnkr_cmpy.validationGroup = vg;
						kya_tanker.validationGroup = vg;
						kya_eqpt_cmpy.validationGroup = null;
						kya_equipment.validationGroup = null;
						
						kya_alloc_type.validationGroup = null;
						kya_alloc_cmpy.validationGroup = null;
						kya_cust_name.validationGroup = null;
						kya_order_no.validationGroup = null;
						break;
					case KEY_TYPE__RAIL_LOADER:
						kya_psnl_cmpy.validationGroup = vg;
						kya_personnel.validationGroup = vg;
						kya_role.validationGroup = vg;
						kya_drawer.validationGroup = vg;
						
						kya_supplier.validationGroup = vg;
						kya_trip_no.validationGroup = null;
						kya_load_site.validationGroup = null;
						kya_load_id.validationGroup = null;
						
						kya_tnkr_cmpy.validationGroup = null;
						kya_tanker.validationGroup = null;
						kya_eqpt_cmpy.validationGroup = null;
						kya_equipment.validationGroup = null;
						
						kya_alloc_type.validationGroup = null;
						kya_alloc_cmpy.validationGroup = null;
						kya_cust_name.validationGroup = null;
						kya_order_no.validationGroup = null;
						break;
					case KEY_TYPE__SCUP_TRIP:
						kya_psnl_cmpy.validationGroup = null;
						kya_personnel.validationGroup = null;
						kya_role.validationGroup = null;
						kya_drawer.validationGroup = null;
						
						kya_supplier.validationGroup = vg;
						kya_trip_no.validationGroup = vg;
						kya_load_site.validationGroup = null;
						kya_load_id.validationGroup = null;
						
						kya_tnkr_cmpy.validationGroup = null;
						kya_tanker.validationGroup = null;
						kya_alloc_type.validationGroup = null;
						kya_alloc_cmpy.validationGroup = null;
						
						kya_eqpt_cmpy.validationGroup = null;
						kya_equipment.validationGroup = null;
						kya_cust_name.validationGroup = null;
						kya_order_no.validationGroup = null;
						break;
					case KEY_TYPE__SCHEDULABLE:
						kya_psnl_cmpy.validationGroup = null;
						kya_personnel.validationGroup = null;
						kya_role.validationGroup = null;
						kya_drawer.validationGroup = null;
						
						kya_supplier.validationGroup = null;
						kya_trip_no.validationGroup = null;
						kya_load_site.validationGroup = null;
						kya_load_id.validationGroup = null;
						
						kya_tnkr_cmpy.validationGroup = null;
						kya_tanker.validationGroup = null;
						kya_eqpt_cmpy.validationGroup = vg;
						kya_equipment.validationGroup = vg;
						
						kya_alloc_type.validationGroup = null;
						kya_alloc_cmpy.validationGroup = null;
						kya_cust_name.validationGroup = null;
						kya_order_no.validationGroup = null;
						break;
					case KEY_TYPE__NON_SCHEDULABLE:
						kya_psnl_cmpy.validationGroup = null;
						kya_personnel.validationGroup = null;
						kya_role.validationGroup = null;
						kya_drawer.validationGroup = null;
						
						kya_supplier.validationGroup = null;
						kya_trip_no.validationGroup = null;
						kya_load_site.validationGroup = null;
						kya_load_id.validationGroup = null;
						
						kya_tnkr_cmpy.validationGroup = null;
						kya_tanker.validationGroup = null;
						kya_eqpt_cmpy.validationGroup = vg;
						kya_equipment.validationGroup = vg;
						
						kya_alloc_type.validationGroup = null;
						kya_alloc_cmpy.validationGroup = null;
						kya_cust_name.validationGroup = null;
						kya_order_no.validationGroup = null;
						break;
					case KEY_TYPE__LOAD:
						kya_psnl_cmpy.validationGroup = vg;
						kya_personnel.validationGroup = vg;
						kya_role.validationGroup = vg;
						kya_drawer.validationGroup = null;
						
						kya_supplier.validationGroup = vg;
						kya_trip_no.validationGroup = vg;
						kya_load_site.validationGroup = null;//true;
						kya_load_id.validationGroup = null;//true;
						
						kya_tnkr_cmpy.validationGroup = null;//true;
						kya_tanker.validationGroup = null;//true;
						kya_eqpt_cmpy.validationGroup = null;
						kya_equipment.validationGroup = null;
						
						kya_alloc_type.validationGroup = null;
						kya_alloc_cmpy.validationGroup = null;
						kya_cust_name.validationGroup = null;
						kya_order_no.validationGroup = null;
						break;
					case KEY_TYPE__ALLOCATION:
						kya_psnl_cmpy.validationGroup = null;
						kya_personnel.validationGroup = null;
						kya_role.validationGroup = null;
						kya_drawer.validationGroup = vg;
						
						kya_supplier.validationGroup = vg;
						kya_trip_no.validationGroup = null;
						kya_load_site.validationGroup = null;
						kya_load_id.validationGroup = null;
						
						kya_tnkr_cmpy.validationGroup = null;
						kya_tanker.validationGroup = null;
						kya_eqpt_cmpy.validationGroup = null;
						kya_equipment.validationGroup = null;
						
						kya_alloc_type.validationGroup = vg;
						kya_alloc_cmpy.validationGroup = vg;
						kya_cust_name.validationGroup = null;
						kya_order_no.validationGroup = null;
						break;
					case KEY_TYPE__DISTRIBUTION:
						kya_psnl_cmpy.validationGroup = null;
						kya_personnel.validationGroup = null;
						kya_role.validationGroup = null;
						kya_drawer.validationGroup = vg;
						
						kya_supplier.validationGroup = vg;
						kya_trip_no.validationGroup = null;
						kya_load_site.validationGroup = null;
						kya_load_id.validationGroup = null;
						
						kya_tnkr_cmpy.validationGroup = null;
						kya_tanker.validationGroup = null;
						kya_eqpt_cmpy.validationGroup = null;
						kya_equipment.validationGroup = null;
						
						kya_alloc_type.validationGroup = null;
						kya_alloc_cmpy.validationGroup = null;
						kya_cust_name.validationGroup = vg;
						kya_order_no.validationGroup = vg;
						break;
					case KEY_TYPE__UNASSIGNED:
					default :
						kya_psnl_cmpy.validationGroup = null;
						kya_personnel.validationGroup = null;
						kya_role.validationGroup = null;
						kya_drawer.validationGroup = null;
						
						kya_supplier.validationGroup = null;
						kya_trip_no.validationGroup = null;
						kya_load_site.validationGroup = null;
						kya_load_id.validationGroup = null;
						
						kya_tnkr_cmpy.validationGroup = null;
						kya_tanker.validationGroup = null;
						kya_eqpt_cmpy.validationGroup = null;
						kya_equipment.validationGroup = null;
						
						kya_alloc_type.validationGroup = null;
						kya_alloc_cmpy.validationGroup = null;
						kya_cust_name.validationGroup = null;
						kya_order_no.validationGroup = null;
						break;
				}
				
			}
			
			private function editRecord():void
			{
				var key_num:int;
				
				key_num = isKeyExisted.lastResult;
				trace ("isKeyExisted", kya_txt.text, key_num);
				if ( key_num > 0 && kya_txt.text!=dataGrid.selectedItem.kya_txt )
				{
					var errorBox:MessageDialog = new MessageDialog( resourceManager.getString('default','ALERT__KEY_TEXT_EXIST') );
					return;
				}
				
				if ( this.checkFields() > 0 )
				{
					return;
				}
				
				var obj:Object = new Object();
				
				
				obj.kya_key_no = kya_key_no.text;
				
				if (kya_key_issuer.selectedIndex>=0)
				{
					obj.kya_key_issuer = lookupKeyIssuer.lastResult[kya_key_issuer.selectedIndex].cmpy_code;
				}
				else
				{
					obj.kya_key_issuer = dataGrid.selectedItem.kya_key_issuer;
				}
				if (kya_type.selectedIndex>=0)
				{
					obj.kya_type = lookupKeyType.lastResult[kya_type.selectedIndex].type_id;
				}
				else
				{
					obj.kya_type = dataGrid.selectedItem.kya_type;
				}
				if (kya_phys_type.selectedIndex>=0)
				{
					obj.kya_phys_type = lookupKeyPhysType.lastResult[kya_phys_type.selectedIndex].phys_type_id;
				}
				else
				{
					obj.kya_phys_type = dataGrid.selectedItem.kya_phys_type;
				}
				if (kya_timecode.selectedIndex>=0)
				{
					obj.kya_timecode = lookupKeyTimeCode.lastResult[kya_timecode.selectedIndex].tcd_title;
				}
				else
				{
					obj.kya_timecode = dataGrid.selectedItem.kya_timecode;
				}
				
				obj.kya_lock = (kya_lock.selected==true?"on":"");
				obj.kya_adhoc = (kya_adhoc.selected==true?"on":"");
				obj.kya_txt = adjustKeyText( kya_txt.text );
				obj.kya_key_created = dateConvert.format( new Date() );
				obj.kya_pin = kya_pin.text;
				obj.kya_pin_changed = dateConvert.format( new Date() );
				obj.kya_reset_pin = (kya_reset_pin.selected==true?"on":"");
				obj.kya_remove_pin = (kya_remove_pin.selected==true?"on":"");
				
				if (kya_personnel.selectedIndex>=0)
				{
					obj.kya_personnel = lookupKeyPsnl.lastResult[kya_personnel.selectedIndex].psnl_code;
				}
				else
				{
					obj.kya_personnel = dataGrid.selectedItem.kya_personnel;
				}
				if (kya_role.selectedIndex>=0)
				{
					obj.kya_role = lookupKeyRole.lastResult[kya_role.selectedIndex].role_id;
				}
				else
				{
					obj.kya_role = dataGrid.selectedItem.kya_role;
				}
				if (kya_drawer.selectedIndex>=0)
				{
					obj.kya_drawer = lookupKeyDrawer.lastResult[kya_drawer.selectedIndex].cmpy_code;
				}
				else
				{
					obj.kya_drawer = ""; //dataGrid.selectedItem.kya_drawer;
				}
				if (kya_supplier.selectedIndex>=0)
				{
					obj.kya_supplier = lookupKeySupplier.lastResult[kya_supplier.selectedIndex].cmpy_code;
				}
				else
				{
					obj.kya_supplier = ""; //dataGrid.selectedItem.kya_supplier;
				}
				if (kya_trip_no.selectedIndex>=0)
				{
					obj.kya_trip_no = lookupKeyTrip.lastResult[kya_trip_no.selectedIndex].trip_no;
				}
				else
				{
					obj.kya_trip_no = dataGrid.selectedItem.kya_trip_no;
				}
				if (kya_tanker.selectedIndex>=0)
				{
					obj.kya_tanker = lookupKeyTnkr.lastResult[kya_tanker.selectedIndex].tnkr_code;
				}
				else
				{
					obj.kya_tanker = dataGrid.selectedItem.kya_tanker;
				}
				if (kya_equipment.selectedIndex>=0)
				{
					obj.kya_equipment = lookupKeyEqpt.lastResult[kya_equipment.selectedIndex].eqpt_id;
				}
				else
				{
					obj.kya_equipment = dataGrid.selectedItem.kya_equipment;
				}
				if (kya_load_site.selectedIndex>=0)
				{
					obj.kya_load_site = lookupKeyTerminal.lastResult[kya_load_site.selectedIndex].term_code;
				}
				else
				{
					obj.kya_load_site = dataGrid.selectedItem.kya_load_site;
				}
				
				obj.kya_load_id = kya_load_id.text;
				
				if (kya_alloc_type.selectedIndex>=0)
				{
					obj.kya_alloc_type = lookupKeyAllocType.lastResult[kya_alloc_type.selectedIndex].alloc_type_id;
				}
				else
				{
					obj.kya_alloc_type = dataGrid.selectedItem.kya_alloc_type;
				}
				if (kya_alloc_cmpy.selectedIndex>=0)
				{
					obj.kya_alloc_cmpy = lookupKeyAllocCmpy.lastResult[kya_alloc_cmpy.selectedIndex].cmpy_code;
				}
				else
				{
					obj.kya_alloc_cmpy = dataGrid.selectedItem.kya_alloc_cmpy;
				}
				if (kya_order_no.selectedIndex>=0)
				{
					obj.kya_order_no = lookupKeyOrder.lastResult[kya_order_no.selectedIndex].order_id;
				}
				else
				{
					obj.kya_order_no = dataGrid.selectedItem.kya_order_no;
				}

				updateResult.token = identificationAssignmentService.update(obj);
				/*
				clearDetail();
				currentState="normal";
				this.findByCode(obj.kya_txt);
				dataGrid.selectedIndex = -1;
				dataGrid.enabled=true;
				*/
			}
			
			private function updateResultHandler(event:Event):void
			{
				clearDetail();
				if ( updateResult.lastResult == "OK" )
				{
					global.msgSuccess(resourceManager.getString('default','MSG_UPDATE__SUCCESS'));
				}
				else
				{
					global.msgFail(resourceManager.getString('default','ERROR_UPDATE__FAILURE'));
				}
				
				var key_txt:String;
				key_txt = adjustKeyText(kya_txt.text );
				
				currentState="normal";
				this.findByCode( key_txt );
				dataGrid.selectedIndex = -1;
				dataGrid.enabled=true;
			}
			
			private function doDelete():void
			{
				var errors:String="";
				var index:int=0;
				
				if ( index > 0 )
				{
					var errorBox:MessageDialog = new MessageDialog( errors );
				}
				else
				{
					var canDelete:DeleteDialog = new DeleteDialog(deleteRecord, hasPassword);
				}
			}
			
			private function deleteRecord():void
			{
				var obj:Object = new Object();
				
				
				obj.kya_key_no = dataGrid.selectedItem.kya_key_no;
				obj.kya_key_issuer = dataGrid.selectedItem.kya_key_issuer;
				
				removeResult.token = identificationAssignmentService.remove(obj);
				/*
				clearDetail();
				currentState="normal";
				this.startFiltering();
				dataGrid.selectedIndex = -1;
				*/
			}
			
			private function removeResultHandler(event:Event):void
			{
				clearDetail();
				if ( removeResult.lastResult == "OK" )
				{
					global.msgSuccess(resourceManager.getString('default','MSG_DELETE__SUCCESS'));
				}
				else
				{
					global.msgFail(resourceManager.getString('default','ERROR_DELETE__FAILURE'));
				}
				
				getTotalRecords.token = identificationAssignmentService.getTotalRecords();
				currentState="normal";
				this.startFiltering();
				dataGrid.selectedIndex = -1;
//				dataGrid.enabled=true;
			}
			
			private function checkKeyText():void
			{
				isKeyExisted.token = identificationAssignmentService.isKeyExisted( kya_txt.text );
			}
			
			private function checkKeyId():void
			{
				var issuer:String="-1";
				if (kya_key_issuer.selectedIndex>=0)
				{
					issuer = lookupKeyIssuer.lastResult[kya_key_issuer.selectedIndex].cmpy_code;
				}
				isKeyIdExisted.token = identificationAssignmentService.isKeyIdExisted( int(kya_key_no.text), issuer );
			}
			
			private function checkFields():int
			{
				var errors:String="";
				var index:int=0;
				
				if ( StringUtil.trim(this.kya_key_no.text).length == 0 )
				{
					index += 1;
					errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','ENTER')+resourceManager.getString('default','KYA_KEY_NO') + "\n";
				}
				
				if ( StringUtil.trim(this.kya_txt.text).length == 0 )
				{
					index += 1;
					errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','ENTER')+resourceManager.getString('default','KYA_TXT') + "\n";
				}
				if ( this.kya_key_issuer.selectedIndex == -1 )//< 0 )
				{
					index += 1;
					errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_KEY_ISSUER') + "\n";
				}
				if ( this.kya_type.selectedIndex == -1 )//< 0 )
				{
					index += 1;
					errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_TYPE') + "\n";
				}
				if ( this.kya_phys_type.selectedIndex == -1 )//< 0 )
				{
					index += 1;
					errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_PHYS_TYPE') + "\n";
				}
				if ( this.kya_timecode.selectedIndex == -1 )//< 0 )
				{
					index += 1;
					errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_TIMECODE') + "\n";
				}

				var key_type:int;
				if (kya_type.selectedIndex == -1 )
				{
					key_type = -1;
				}
				else
				{
					key_type = lookupKeyType.lastResult[kya_type.selectedIndex].type_id;
				}
				
				var key_role:int;
				if (kya_role.selectedIndex == -1 )
				{
					key_role = -1;
				}
				else
				{
					key_role = lookupKeyRole.lastResult[kya_role.selectedIndex].role_id;
				}
				
				switch ( key_type )
				{
					case KEY_TYPE__SUPERVISOR:
						//kya_psnl_cmpy.enabled = true;
						//kya_personnel.enabled = true;
						//kya_role.enabled = true;
						if ( this.kya_personnel.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_PERSONNEL') + "\n";
						}
						if ( this.kya_role.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_ROLE') + "\n";
						}
						break;
					case KEY_TYPE__DRIVER:
						//kya_psnl_cmpy.enabled = true;
						//kya_personnel.enabled = true;
						//kya_role.enabled = true;
						//kya_supplier.enabled = true;
						//kya_drawer.enabled = true;
						if ( this.kya_personnel.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_PERSONNEL') + "\n";
						}
						if ( this.kya_role.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_ROLE') + "\n";
						}
						if ( this.kya_drawer.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_DRAWER') + "\n";
						}
						// supplier may be not mandatory
						if ( this.kya_supplier.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_SUPPLIER') + "\n";
						}
						break;
					case KEY_TYPE__PERSONNEL:
						//kya_psnl_cmpy.enabled = true;
						//kya_personnel.enabled = true;
						//kya_role.enabled = true;
						//kya_supplier.enabled = true;
						//kya_drawer.enabled = true;
						if ( this.kya_personnel.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_PERSONNEL') + "\n";
						}
						if ( this.kya_role.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_ROLE') + "\n";
						}
						if ( key_role == KEY_ROLE__DRIVER || key_role == KEY_ROLE__CONTRACTOR || key_role == KEY_ROLE__LOADER )
						{
							if ( this.kya_drawer.selectedIndex == -1 )//< 0 )
							{
								index += 1;
								errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_DRAWER') + "\n";
							}
							if ( this.kya_supplier.selectedIndex == -1 )//< 0 )
							{
								index += 1;
								errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_SUPPLIER') + "\n";
							}
						}
						break;
					case KEY_TYPE__TANKER:
						//kya_tnkr_cmpy.enabled = true;
						//kya_tanker.enabled = true;
						if ( this.kya_tanker.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_TANKER') + "\n";
						}
						break;
					case KEY_TYPE__COMBINATION:
						//kya_psnl_cmpy.enabled = true;
						//kya_personnel.enabled = true;
						//kya_role.enabled = true;
						//kya_supplier.enabled = true;
						//kya_drawer.enabled = true;
						//kya_tnkr_cmpy.enabled = true;
						//kya_tanker.enabled = true;
						if ( this.kya_personnel.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_PERSONNEL') + "\n";
						}
						if ( this.kya_role.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_ROLE') + "\n";
						}
						if ( key_role == KEY_ROLE__DRIVER || key_role == KEY_ROLE__CONTRACTOR || key_role == KEY_ROLE__LOADER )
						{
							if ( this.kya_drawer.selectedIndex == -1 )//< 0 )
							{
								index += 1;
								errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_DRAWER') + "\n";
							}
							if ( this.kya_supplier.selectedIndex == -1 )//< 0 )
							{
								index += 1;
								errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_SUPPLIER') + "\n";
							}
						}
						if ( this.kya_tanker.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_TANKER') + "\n";
						}
						break;
					case KEY_TYPE__RAIL_LOADER:
						//kya_psnl_cmpy.enabled = true;
						//kya_personnel.enabled = true;
						//kya_role.enabled = true;
						//kya_supplier.enabled = true;
						//kya_drawer.enabled = true;
						if ( this.kya_personnel.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_PERSONNEL') + "\n";
						}
						if ( this.kya_role.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_ROLE') + "\n";
						}
						if ( this.kya_drawer.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_DRAWER') + "\n";
						}
						if ( this.kya_supplier.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_SUPPLIER') + "\n";
						}
						break;
					case KEY_TYPE__SCUP_TRIP:
						//kya_supplier.enabled = true;
						//kya_trip_no.enabled = true;
						if ( this.kya_supplier.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_SUPPLIER') + "\n";
						}
						if ( this.kya_trip_no.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_TRIP_NO') + "\n";
						}
						break;
					case KEY_TYPE__SCHEDULABLE:
						//kya_eqpt_cmpy.enabled = true;
						//kya_equipment.enabled = true;
						if ( this.kya_equipment.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_EQUIPMENT') + "\n";
						}
						break;
					case KEY_TYPE__NON_SCHEDULABLE:
						//kya_eqpt_cmpy.enabled = true;
						//kya_equipment.enabled = true;
						if ( this.kya_equipment.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_EQUIPMENT') + "\n";
						}
						break;
					case KEY_TYPE__LOAD:
						//kya_psnl_cmpy.enabled = false;//true;
						//kya_personnel.enabled = false;//true;
						//kya_role.enabled = false;//true;
						//kya_drawer.enabled = false;//false;
						//kya_tnkr_cmpy.enabled = false;//true;
						//kya_tanker.enabled = false;//true;
						//kya_load_site.enabled = false;//true;
						//kya_load_id.enabled = false;//true;
						//kya_supplier.enabled = true;
						//kya_trip_no.enabled = true;
						if ( this.kya_personnel.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_PERSONNEL') + "\n";
						}
						if ( this.kya_role.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_ROLE') + "\n";
						}
						if ( this.kya_supplier.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_SUPPLIER') + "\n";
						}
						if ( this.kya_trip_no.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_TRIP_NO') + "\n";
						}
						break;
					case KEY_TYPE__ALLOCATION:
						//kya_supplier.enabled = true;
						//kya_drawer.enabled = true;
						//kya_alloc_type.enabled = true;
						//kya_alloc_cmpy.enabled = true;
						if ( this.kya_supplier.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_SUPPLIER') + "\n";
						}
						if ( this.kya_drawer.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_DRAWER') + "\n";
						}
						if ( this.kya_alloc_type.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_ALLOC_TYPE') + "\n";
						}
						if ( this.kya_alloc_cmpy.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_ALLOC_CMPY') + "\n";
						}
						break;
					case KEY_TYPE__DISTRIBUTION:
						//kya_supplier.enabled = true;
						//kya_drawer.enabled = true;
						//kya_cust_name.enabled = true;
						//kya_order_no.enabled = true;
						if ( this.kya_supplier.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_SUPPLIER') + "\n";
						}
						if ( this.kya_drawer.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_DRAWER') + "\n";
						}
						if ( this.kya_order_no.selectedIndex == -1 )//< 0 )
						{
							index += 1;
							errors += String(index) + ". " + resourceManager.getString('default','PLEASE')+resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_ORDER_NO') + "\n";
						}
						break;
					case KEY_TYPE__UNASSIGNED:
					default :
						break;
				}
				
				
				if ( index > 0 )
				{
					var errorBox:MessageDialog = new MessageDialog( errors );
				}
				return index;
			}
			
			private function createRecord():void
			{
				var key_num:int;
				
				key_num = isKeyExisted.lastResult;
				trace ("isKeyExisted", kya_txt.text, key_num);
				if ( key_num > 0 )
				{
					var errorBox:MessageDialog = new MessageDialog( resourceManager.getString('default','ALERT__KEY_TEXT_EXIST') );
					return;
				}
				key_num = isKeyIdExisted.lastResult;
				trace ("isKeyIdExisted", kya_key_no.text, key_num);
				if ( key_num > 0 )
				{
					var cfgValue:String = global.getValueFromSiteConfigSettings( "SITE_IDASSN_DUPLICATE" );
					var msgValue:String = "";
					
					if ( cfgValue == 'Y' )
					{
						msgValue = resourceManager.getString('default','ALERT__KEY_ID_EXIST');
					}
					else
					{
						msgValue = resourceManager.getString('default','ALERT__KEY_ID_UNIQUE');
					}
					
					var errorBox2:MessageDialog = new MessageDialog( msgValue );

					return;
				}
				
				if ( this.checkFields() > 0 )
				{
					return;
				}
				
				
				var obj:Object = new Object();
				
				
				obj.kya_key_no = kya_key_no.text;

				if (kya_key_issuer.selectedIndex>=0)
				{
					obj.kya_key_issuer = lookupKeyIssuer.lastResult[kya_key_issuer.selectedIndex].cmpy_code;
				}
				else
				{
					obj.kya_key_issuer = lookupKeyIssuer.lastResult[0].cmpy_code;
				}
				if (kya_type.selectedIndex>=0)
				{
					obj.kya_type = lookupKeyType.lastResult[kya_type.selectedIndex].type_id;
				}
				else
				{
					obj.kya_type = lookupKeyType.lastResult[0].type_id;
				}
				if (kya_phys_type.selectedIndex>=0)
				{
					obj.kya_phys_type = lookupKeyPhysType.lastResult[kya_phys_type.selectedIndex].phys_type_id;
				}
				else
				{
					obj.kya_phys_type = lookupKeyPhysType.lastResult[0].phys_type_id;
				}
				if (kya_timecode.selectedIndex>=0)
				{
					obj.kya_timecode = lookupKeyTimeCode.lastResult[kya_timecode.selectedIndex].tcd_title;
				}
				else
				{
					obj.kya_timecode = lookupKeyTimeCode.lastResult[0].tcd_title;
				}
				
				obj.kya_lock = (kya_lock.selected==true?"on":"");
				obj.kya_adhoc = (kya_adhoc.selected==true?"on":"");
				obj.kya_txt = adjustKeyText( kya_txt.text );
				obj.kya_key_created = dateConvert.format( new Date() );
				obj.kya_pin = kya_pin.text;
				obj.kya_pin_changed = dateConvert.format( new Date() );
				
				if (kya_personnel.selectedIndex>=0)
				{
					obj.kya_personnel = lookupKeyPsnl.lastResult[kya_personnel.selectedIndex].psnl_code;
				}
				else
				{
					obj.kya_personnel = ''; //lookupKeyPsnl.lastResult[0].psnl_code;
				}
				if (kya_role.selectedIndex>=0)
				{
					obj.kya_role = lookupKeyRole.lastResult[kya_role.selectedIndex].role_id;
				}
				else
				{
					obj.kya_role = ''; //lookupKeyRole.lastResult[0].role_id;
				}
				if (kya_drawer.selectedIndex>=0)
				{
					obj.kya_drawer = lookupKeyDrawer.lastResult[kya_drawer.selectedIndex].cmpy_code;
				}
				else
				{
					obj.kya_drawer = ''; //lookupKeyDrawer.lastResult[0].cmpy_code;
				}
				if (kya_supplier.selectedIndex>=0)
				{
					obj.kya_supplier = lookupKeySupplier.lastResult[kya_supplier.selectedIndex].cmpy_code;
				}
				else
				{
					obj.kya_supplier = ''; //lookupKeySupplier.lastResult[0].cmpy_code;
				}
				if (kya_trip_no.selectedIndex>=0)
				{
					obj.kya_trip_no = lookupKeyTripNew.lastResult[kya_trip_no.selectedIndex].trip_no;
				}
				else
				{
					obj.kya_trip_no = ''; //lookupKeyTripNew.lastResult[0].trip_no;
				}
				if (kya_tanker.selectedIndex>=0)
				{
					obj.kya_tanker = lookupKeyTnkr.lastResult[kya_tanker.selectedIndex].tnkr_code;
				}
				else
				{
					obj.kya_tanker = ''; //lookupKeyTnkr.lastResult[0].tnkr_code;
				}
				if (kya_equipment.selectedIndex>=0)
				{
					obj.kya_equipment = lookupKeyEqpt.lastResult[kya_equipment.selectedIndex].eqpt_id;
				}
				else
				{
					obj.kya_equipment = ''; //lookupKeyEqpt.lastResult[0].eqpt_id;
				}
				if (kya_load_site.selectedIndex>=0)
				{
					obj.kya_load_site = lookupKeyTerminal.lastResult[kya_load_site.selectedIndex].term_code;
				}
				else
				{
					obj.kya_load_site = ''; //lookupKeyTerminal.lastResult[0].term_code;
				}
				
				obj.kya_load_id = kya_load_id.text;
				
				if (kya_alloc_type.selectedIndex>=0)
				{
					obj.kya_alloc_type = lookupKeyAllocType.lastResult[kya_alloc_type.selectedIndex].alloc_type_id;
				}
				else
				{
					obj.kya_alloc_type = ''; //lookupKeyAllocType.lastResult[0].alloc_type_id;
				}
				if (kya_alloc_cmpy.selectedIndex>=0)
				{
					obj.kya_alloc_cmpy = lookupKeyAllocCmpy.lastResult[kya_alloc_cmpy.selectedIndex].cmpy_code;
				}
				else
				{
					obj.kya_alloc_cmpy = ''; //lookupKeyAllocCmpy.lastResult[0].cmpy_code;
				}
				if (kya_order_no.selectedIndex>=0)
				{
					obj.kya_order_no = lookupKeyOrder.lastResult[kya_order_no.selectedIndex].order_id;
				}
				else
				{
					obj.kya_order_no = ''; //lookupKeyOrder.lastResult[0].order_id;
				}
				
				createResult.token = identificationAssignmentService.create(obj);
				/*
				clearDetail();
				currentState="normal";
				this.findByCode(obj.kya_txt);
				dataGrid.selectedIndex = -1;
				dataGrid.enabled=true;
				*/
			}
			
			private function createResultHandler(event:Event):void
			{
				clearDetail();
				if ( createResult.lastResult == "OK" )
				{
					global.msgSuccess(resourceManager.getString('default','MSG_CREATE__SUCCESS'));
				}
				else
				{
					global.msgFail(resourceManager.getString('default','ERROR_CREATE__FAILURE'));
				}
				
				var key_txt:String;
				key_txt = adjustKeyText( kya_txt.text );
				getTotalRecords.token = identificationAssignmentService.getTotalRecords();
				currentState="normal";
				this.findByCode( key_txt );
				dataGrid.selectedIndex = -1;
				dataGrid.enabled=true;
			}
			
			protected function createNewRecord(event:MouseEvent):void
			{	
				idx=dataGrid.selectedIndex;
				dataGrid.ensureCellIsVisible(idx);
				currentState="create";
				dataGrid.enabled=false;
				changeFieldStates();
			}
			
			
			public function getArrayCollection(obj:Object):ArrayCollection
			{
				var temp:ArrayCollection = new ArrayCollection;
				temp.addItem( obj );
				return temp;
			}
			
			public function convertDateToLocaleString(dt:String):String
			{
				var dt_string:String;
				var dt_date:Date = new Date();
				
				dt_string = ""; 
				if ((dt!=null) && (dt!='null') && (dt!=''))
				{
					dt_date = DateField.stringToDate(dt,"YYYY-MM-DD");
					dt_string = dateFormatter.format( dt_date);
				}
				//trace ("convertDateToLocale", dt, dt_date, dt_string);
				return dt_string;
			}
			
			public function convertDateToLocale(dt:String):Date
			{
				var dt_date:Date = new Date();
				
				if ((dt!=null) && (dt!='null') && (dt!=''))
				{
					dt_date = DateField.stringToDate(dt,"YYYY-MM-DD");
				}
				//trace ("convertDateToLocale", dt, dt_date, dt_string);
				return dt_date;
			}
			
			public function getDefaultDate():Date
			{
				var now_date:Date;
				var def_date:Date;
				
				now_date = new Date();
				def_date = DateTimeFunc.dateAdd( "yyyy", 1, now_date );
				
				return def_date;
			}
			
			private function kya_txt_changeHandler(event:Event):void
			{
				trace ("************************");
				trace ("key_text, change:", kya_txt.text );
				trace ("************************");
				checkKeyText();
			}
			
			private function kya_txt_valueCommitHandler(event:Event):void
			{
				trace ("************************");
				trace ("key_text, value commit:", kya_txt.text );
				trace ("************************");
			}
			
			private function adjustKeyText(txt:String):String
			{
				return StringUtil.trim(txt.toUpperCase());
			}
			
			private function decryptKeyText(txt:String):void
			{
				var card_txt:String;
				
				card_txt = StringUtil.trim(txt);
				//trace("decryptKeyText", kya_phys_type);
				//trace("decryptKeyText", kya_phys_type.selectedIndex);
				if ( (kya_phys_type!=null && kya_phys_type.selectedIndex>0) && lookupKeyPhysType.lastResult[kya_phys_type.selectedIndex].phys_type_id == 7 )
				{
					// only touch button requires the chop of prefix and postfix characters
					kya_txt.text = card_txt.substring(2, card_txt.length-2);
				}
				else
				{
					kya_txt.text = card_txt;
				}
			}
			
			private function popupCardReaderDialog():void
			{
				this.cardNoInput = new TextInputDialog();
				cardNoInput.callBack=decryptKeyText;
				cardNoInput.msg= resourceManager.getString('default','HELP__KEY_TEXT_BY_CARD_READER');
				cardNoInput.txt= "";
				//dialog.msg= "Do you wish to remove this record?";
				//_callback = value;
				PopUpManager.addPopUp(cardNoInput, (FlexGlobals.topLevelApplication as DisplayObject), true );
				PopUpManager.centerPopUp(cardNoInput);
				cardNoInput.card_txt.setFocus();
			}
			
			private function decryptFilterKeyText(txt:String):void
			{
				var card_txt:String;
				
				card_txt = StringUtil.trim(txt);
				/*
				//trace("decryptFilterKeyText", kya_phys_type);
				//trace("decryptFilterKeyText", kya_phys_type.selectedIndex);
				if ( kya_phys_type!=null && lookupKeyPhysType.lastResult[kya_phys_type.selectedIndex].phys_type_id == 7 )
				{
					// only touch button requires the chop of prefix and postfix characters
					fltr_keytext.text = card_txt.substring(2, card_txt.length-2);
				}
				else
				{
					fltr_keytext.text = card_txt;
				}
				*/
				fltr_keytext.text = card_txt.substring(2, card_txt.length-2);
				
				if (currentState == "edit") clearDetail();
				startFiltering();
			}
			
			private function popupFilterCardReaderDialog():void
			{
				this.cardNoInput = new TextInputDialog();
				cardNoInput.callBack=decryptFilterKeyText;
				cardNoInput.msg= resourceManager.getString('default','HELP__KEY_TEXT_BY_CARD_READER');
				cardNoInput.txt= "";
				//dialog.msg= "Do you wish to remove this record?";
				//_callback = value;
				PopUpManager.addPopUp(cardNoInput, (FlexGlobals.topLevelApplication as DisplayObject), true );
				PopUpManager.centerPopUp(cardNoInput);
				cardNoInput.card_txt.setFocus();
			}
			
			protected function save_clickHandler():void
			{
				if (currentState == "create")
				{
					createRecord();
				}
				if (currentState == "edit")
				{
					editRecord();
				}
			}
			
			protected function fltr_issuer_selectHandler(event:FlexEvent):void
			{
				this.startFiltering();
			}
			
			protected function lookupKeyPsnl_resultHandler(event:ResultEvent):void
			{
				//trace ("--------------Start lookupOrderCustomer_resultHandler");
				//trace ("----------------End lookupOrderCustomer_resultHandler");
				if (currentState == "edit")
				{
					trace ("********lookupKeyPsnl_resultHandler", this.kya_personnel.selectedItem, dataGrid.selectedItem.kya_psnl_name);
					this.kya_personnel.selectedItem = dataGrid.selectedItem.kya_psnl_name;
				}
			}
			
			protected function lookupKeyTnkr_resultHandler(event:ResultEvent):void
			{
				if (currentState == "edit")
				{
					this.kya_tanker.selectedItem = dataGrid.selectedItem.kya_tnkr_desc;
				}
			}
			
			protected function lookupKeyEqpt_resultHandler(event:ResultEvent):void
			{
				if (currentState == "edit")
				{
					this.kya_equipment.selectedItem = dataGrid.selectedItem.kya_eqpt_desc;
				}
			}
			
			protected function isCmpyPinRequired_resultHandler(event:ResultEvent):void
			{
				if (currentState == "edit")
				{
					if ( isCmpyPinRequired.lastResult == 0 )
					{
						this.kya_remove_pin.enabled = true;
					}
					else
					{
						this.kya_remove_pin.enabled = false;
					}
				}
			}
			
			protected function getTotalRecords_resultHandler(event:ResultEvent):void
			{
				var tags:String = "";
				var id_assignment_total:int = getTotalRecords.lastResult;
				
				if ( global.wg_max_tags_flag == true )
				{
					tags += resourceManager.getString('default','TAG__AVAILABLE') + ": ";
					tags += String(global.wg_max_tags) + ", ";
					tags += resourceManager.getString('default','TAG__USED') + ": ";
					tags += String(id_assignment_total) + " [";
					//tags += String(Math.round(Number(id_assignment_total)/Number(global.wg_max_tags)*100.0));
					tags += tools.roundString( String(Number(id_assignment_total)/Number(global.wg_max_tags)*100.0), 2 );
					tags += "%]";
					
					if ( id_assignment_total >= global.wg_max_tags )
					{
						this.btn_create.enabled = false;
					}
					else
					{
						this.btn_create.enabled = this.canCreate;
					}
				}
				else
				{
					tags += resourceManager.getString('default','TAG__TOTAL') + ": ";
					tags += String(getTotalRecords.lastResult);
				}
				
				key_counts.text = tags;
			}
			
			protected function fltr_keytext_changeHandler(event:TextOperationEvent):void
			{
				fltr_keytext.text = fltr_keytext.text.toUpperCase();
			}
			
			protected function card_text_changeHandler(event:KeyboardEvent):void
			{
				kya_txt.text = kya_txt.text.toUpperCase();
			}
			
			protected function card_default():void{
				// check user entry 
				var cardID:String = "";
				if(kya_txt.text)cardID = kya_txt.text;
				
				trace("type", ObjectUtil.toString(kya_type.selectedItem));
				trace("Issuer", ObjectUtil.toString(kya_key_issuer.selectedItem));
				switch(kya_phys_type.selectedItem.phys_type_id){
					case "2":
						//slice 37 mate
						cardID = cardID.slice(0,37);
						//prefill text with trailling 0s
						while(cardID.length<37)cardID+="0";
						kya_key_no.text = kya_key_no.text.slice(0,4);
						// string build
						var type:String   = kya_type.selectedIndex       >-1 ? Number(kya_type.selectedItem.type_id)+"":"";
						var issuer:String = kya_key_issuer.selectedIndex >-1 ? kya_key_issuer.selectedItem.cmpy_code:"";
						var key_no:String = kya_key_no.text;
						// card mapping
						switch(type){
							case "1":type = "0";break;
							case "2":type = "1";break;
							case "3":type = "1";break;
							case "4":type = "3";break;
							case "5":type = "4";break;
							case "6":type = "3";break;
							case "7":type = "3";break;
							case "8":type = "3";break;
							case "9":type = "3";break;
						}
						// slice trails and prepend 0s
						type   = type.slice(0,2);  while(type.length<2)   type   = "0"+type;
						issuer = issuer.slice(0,4);while(issuer.length<4) issuer = "0"+issuer;
						key_no = key_no.slice(0,4);while(key_no.length<4) key_no = "0"+key_no;
						cardID = type + "00" + issuer + key_no + cardID.slice(12);
						// slice excess
						cardID = cardID.slice(0,37);
						break;
						
				}
				
				kya_txt.text = cardID;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:DateTimeFormatter id="dateFormatter" locale="{LocaleID.DEFAULT}" dateStyle="short" timeStyle="none"/>
		<s:DateTimeFormatter id="dateConvert" dateTimePattern="yyyy-MM-dd"/>
		<s:CallResponder id="getPagedResult"/>
		<s:CallResponder id="lookupKeyAllocCmpy"/>
		<s:CallResponder id="lookupKeyIssuer"/>
		<s:CallResponder id="lookupKeyDrawer"/>
		<s:CallResponder id="lookupKeySupplier"/>
		<s:CallResponder id="lookupKeyEmployer"/>
		<s:CallResponder id="lookupKeyCarrier"/>
		<s:CallResponder id="lookupKeyCustomer"/>
		<s:CallResponder id="lookupKeyType"/>
		<s:CallResponder id="lookupKeyPhysType"/>
		<s:CallResponder id="lookupKeyRole"/>
		<s:CallResponder id="lookupKeyPsnl" result="lookupKeyPsnl_resultHandler(event)"/>
		<s:CallResponder id="lookupKeyTnkr" result="lookupKeyTnkr_resultHandler(event)"/>
		<s:CallResponder id="lookupKeyEqpt" result="lookupKeyEqpt_resultHandler(event)"/>
		<s:CallResponder id="lookupKeyTerminal"/>
		<s:CallResponder id="lookupKeyTripNew"/>
		<s:CallResponder id="lookupKeyTrip"/>
		<s:CallResponder id="lookupKeyAllocType"/>
		<s:CallResponder id="lookupKeyOrder"/>
		<s:CallResponder id="lookupKeyTimeCode"/>
		<s:CallResponder id="isCmpyPinRequired" result="isCmpyPinRequired_resultHandler(event)"/>
		<s:CallResponder id="getTotalRecords" result="getTotalRecords_resultHandler(event)"/>
		<s:CallResponder id="isKeyExisted"/>
		<s:CallResponder id="isKeyIdExisted"/>
		<identificationassignmentservice:IdentificationAssignmentService id="identificationAssignmentService" channelSet="{global.channelSet}"
									   fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
									   showBusyCursor="true"/>
		<s:CallResponder id="removeResult" result="removeResultHandler(event)" fault="global.msgFail(resourceManager.getString('default','ERROR_DELETE__FAILURE'))"/>
		<s:CallResponder id="updateResult" result="updateResultHandler(event)" fault="global.msgFail(resourceManager.getString('default','ERROR_UPDATE__FAILURE'))"/>
		<s:CallResponder id="createResult" result="createResultHandler(event)" fault="global.msgFail(resourceManager.getString('default','ERROR_CREATE__FAILURE'))"/>
		<components:ValidationGroup id="vg" action="{save_clickHandler}" defaultButton="{btn_save}"/>
	</fx:Declarations>
	<s:Panel id="panel" width="100%" height="100%"
			 skinClass="skins.WidgetPanelSkin"
			 skinClass.widget="skins.NullSkin">
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>
		
		<s:HGroup id="toolbar" width="100%" gap="5" paddingBottom="2" paddingTop="2">
			<components:DKI_DropDownList id="fltr_issuer" width="180" height="100%" useVirtualLayout="false"
										 change="fltr_issuer_changeHandler(event)" valueCommit="fltr_issuer_selectHandler(event)" cornerRadius="10"
										 labelField="cmpy_name" prompt="{resourceManager.getString('default','KYA_ISSUER_NAME')+resourceManager.getString('default','FILTER')}"
										 width.widget="150" dataProvider="{lookupKeyIssuer.lastResult}" 
										 selectedIndex="{(lookupKeyIssuer.lastResult.length==1?0:-1)}"/>
			<components:DKI_DropDownList id="fltr_type" width="160" height="100%"
										 change="fltr_type_changeHandler(event)" cornerRadius="10"
										 labelField="type_name" prompt="{resourceManager.getString('default','KYA_TYPE_NAME')+resourceManager.getString('default','FILTER')}"
										 width.widget="150" dataProvider="{lookupKeyType.lastResult}"/>

			<components:DKI_ValidatorInput id="fltr_keyid" width="140" height="{labelHeight}" 
									  keyUp="fltr_keyid_keyUpHandler(event)" 
									  excludeFrom="widget" width.widget="140"  visible="false" includeInLayout="false"
									  prompt="{resourceManager.getString('default','KYA_KEY_NO')+resourceManager.getString('default','FILTER')}"/>
			<components:DKI_ValidatorInput id="fltr_keytnkr" width="140" height="{labelHeight}" 
									  keyUp="fltr_keytnkr_keyUpHandler(event)" 
									  excludeFrom="widget" width.widget="140" 
									  prompt="{resourceManager.getString('default','KYA_TNKR_NAME')+resourceManager.getString('default','FILTER')}"/>
			<components:DKI_ValidatorInput id="fltr_keypsnl" width="140" height="{labelHeight}" 
									  keyUp="fltr_keypsnl_keyUpHandler(event)" 
									  excludeFrom="widget" width.widget="140" 
									  prompt="{resourceManager.getString('default','KYA_PSNL_NAME')+resourceManager.getString('default','FILTER')}"/>
			<components:DKI_ValidatorInput id="fltr_keytext" width="140" height="{labelHeight}" 
									  keyUp="fltr_keytext_keyUpHandler(event)" doubleClickEnabled="true" doubleClick="this.popupFilterCardReaderDialog()"
									  excludeFrom="widget" width.widget="140" 
									  change="fltr_keytext_changeHandler(event)" 
									  prompt="{resourceManager.getString('default','KYA_TXT')+resourceManager.getString('default','FILTER')}"/>
			<s:Spacer width="-12" excludeFrom="widget" />
			<components:DKI_Button id="tagBtn2" excludeFrom="widget" label="" width="30" height="{fieldHeight}" click="this.popupFilterCardReaderDialog()" enabled="true" visible="true" type="tag"/>
			
			<components:DKI_Button height="100%" label="{resourceManager.getString('default','CLEAR')+resourceManager.getString('default','FILTER')}" click="refreshRecords(event)"
								   width.widget="120" type="refresh"/>
			<s:Spacer width="100%" excludeFrom="widget"/>
			<s:Label id="key_counts" text="tags" height="100%" visible="true" visible.widget="false" color="#0000FF" fontWeight="bold" fontSize="14" verticalAlign="middle" />
			<components:DKI_Button id="btn_create" label="{resourceManager.getString('default','CREATE')}" height="100%" click="createNewRecord(event)" includeIn="normal" enabled="{this.canCreate}" type="create"/>			
		</s:HGroup>
		<s:DataGrid id="dataGrid" width="100%" height="100%" requestedRowCount="4"
					selectionChange="dataGrid_selectionChangeHandler(event)"
					skinClass="skins.DKI_DataGrid_Skin"
					height.widget="100%">
			<s:columns>
				<s:ArrayList>
					<s:source>
						<s:GridColumn dataField="kya_key_no" headerText="{resourceManager.getString('default','KYA_KEY_NO')}"></s:GridColumn>
						<s:GridColumn dataField="kya_key_issuer" headerText="{resourceManager.getString('default','KYA_KEY_ISSUER')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_issuer_name" headerText="{resourceManager.getString('default','KYA_ISSUER_NAME')}"></s:GridColumn>
						<s:GridColumn dataField="kya_type" headerText="{resourceManager.getString('default','KYA_TYPE')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_type_name" headerText="{resourceManager.getString('default','KYA_TYPE_NAME')}"></s:GridColumn>
						<s:GridColumn dataField="kya_phys_type" headerText="{resourceManager.getString('default','KYA_PHYS_TYPE')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_phys_name" headerText="{resourceManager.getString('default','KYA_PHYS_NAME')}"></s:GridColumn>
						<s:GridColumn dataField="kya_timecode" headerText="{resourceManager.getString('default','KYA_TIMECODE')}" visible.widget="false"></s:GridColumn>
						<s:GridColumn dataField="kya_lock" headerText="{resourceManager.getString('default','KYA_LOCK')}" itemRenderer="renderers.GridLockRender"></s:GridColumn>
						<s:GridColumn dataField="kya_adhoc" headerText="{resourceManager.getString('default','KYA_ADHOC')}" itemRenderer="renderers.GridCheckRender" visible="true"></s:GridColumn>
						<s:GridColumn dataField="kya_txt" headerText="{resourceManager.getString('default','KYA_TXT')}"></s:GridColumn>
						<s:GridColumn dataField="kya_key_created" headerText="{resourceManager.getString('default','KYA_KEY_CREATED')}" itemRenderer="renderers.DateRenderer" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_pin" headerText="{resourceManager.getString('default','KYA_PIN')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_pin_changed" headerText="{resourceManager.getString('default','KYA_PIN_CHANGED')}" itemRenderer="renderers.DateRenderer" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_personnel" headerText="{resourceManager.getString('default','KYA_PERSONNEL')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_psnl_name" headerText="{resourceManager.getString('default','KYA_PSNL_NAME')}" visible.widget="false"></s:GridColumn>
						<s:GridColumn dataField="kya_psnl_cmpy" headerText="{resourceManager.getString('default','KYA_PSNL_CMPY')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_psnl_cmpy_name" headerText="{resourceManager.getString('default','KYA_PSNL_CMPY_NAME')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_role" headerText="{resourceManager.getString('default','KYA_ROLE')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_role_name" headerText="{resourceManager.getString('default','KYA_ROLE_NAME')}" visible.widget="false"></s:GridColumn>
						<s:GridColumn dataField="kya_drawer" headerText="{resourceManager.getString('default','KYA_DRAWER')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_draw_name" headerText="{resourceManager.getString('default','KYA_DRAW_NAME')}" visible.widget="false"></s:GridColumn>
						<s:GridColumn dataField="kya_supplier" headerText="{resourceManager.getString('default','KYA_SUPPLIER')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_supp_name" headerText="{resourceManager.getString('default','KYA_SUPP_NAME')}" visible.widget="false"></s:GridColumn>
						<s:GridColumn dataField="kya_tanker" headerText="{resourceManager.getString('default','KYA_TANKER')}" visible.widget="false"></s:GridColumn>
						<s:GridColumn dataField="kya_tnkr_name" headerText="{resourceManager.getString('default','KYA_TNKR_NAME')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_tnkr_desc" headerText="{resourceManager.getString('default','KYA_TNKR_NAME')}" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_tnkr_cmpy" headerText="{resourceManager.getString('default','KYA_TNKR_CMPY')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_tnkr_cmpy_name" headerText="{resourceManager.getString('default','KYA_TNKR_CMPY_NAME')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_equipment" headerText="{resourceManager.getString('default','KYA_EQUIPMENT')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_eqpt_name" headerText="{resourceManager.getString('default','KYA_EQPT_NAME')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_eqpt_desc" headerText="{resourceManager.getString('default','KYA_EQPT_NAME')}" visible.widget="false"></s:GridColumn>
						<s:GridColumn dataField="kya_eqpt_cmpy" headerText="{resourceManager.getString('default','KYA_EQPT_CMPY')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_eqpt_cmpy_name" headerText="{resourceManager.getString('default','KYA_EQPT_CMPY_NAME')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_etyp_name" headerText="{resourceManager.getString('default','KYA_ETYP_NAME')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_load_site" headerText="{resourceManager.getString('default','KYA_LOAD_SITE')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_site_name" headerText="{resourceManager.getString('default','KYA_SITE_NAME')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_load_id" headerText="{resourceManager.getString('default','KYA_LOAD_ID')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_trip_no" headerText="{resourceManager.getString('default','KYA_TRIP_NO')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_alloc_type" headerText="{resourceManager.getString('default','KYA_ALLOC_TYPE')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_alloc_type_name" headerText="{resourceManager.getString('default','KYA_ALLOC_TYPE_NAME')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_alloc_cmpy" headerText="{resourceManager.getString('default','KYA_ALLOC_CMPY')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_alloc_cmpy_name" headerText="{resourceManager.getString('default','KYA_ALLOC_CMPY_NAME')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_order_no" headerText="{resourceManager.getString('default','KYA_ORDER_NO')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_order_desc" headerText="{resourceManager.getString('default','KYA_ORDER_NO')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_cust_ordno" headerText="{resourceManager.getString('default','KYA_CUST_ORDNO')}" visible.widget="false" visible="false"></s:GridColumn>
						<s:GridColumn dataField="kya_cust_name" headerText="{resourceManager.getString('default','KYA_CUST_NAME')}" visible.widget="false" visible="false"></s:GridColumn>
					</s:source>
				</s:ArrayList>
			</s:columns>
			<s:dataProvider>
				<s:AsyncListView list="{getPagedResult.lastResult}"/>
			</s:dataProvider>
		</s:DataGrid>
	</s:Panel>
	
	<s:Panel id="details" includeIn="edit,create" width="100%" height="420"
			 itemCreationPolicy="immediate" skinClass="skins.WidgetPanelSkin">
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>
		
		<s:Spacer height="5"/>
		<s:VGroup>
			<s:HGroup>
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_KEY_NO')}" verticalAlign="middle"/>
					<components:DKI_ValidatorInput id="kya_key_no" 
											  width="{fieldWidth}" height="{fieldHeight}" 
											  text.edit="{dataGrid.selectedItem.kya_key_no}" editable.edit="false" 
											  text.create="" editable.create="true" 
											  change="this.checkKeyId();card_default();" 
											  maxChars="{(kya_phys_type.selectedItem.phys_type_id==2)?4:9}" 
											  required="true" validationType="integer" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_KEY_NO')}" 
											  />
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_ISSUER_NAME')}" verticalAlign="middle"/>
					<components:DKI_ValidatorComboBox id="kya_key_issuer" 
											 dataProvider="{lookupKeyIssuer.lastResult}" 
											 labelField="cmpy_name" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_issuer_name}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="{this.fltr_issuer.selectedIndex}" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_ISSUER_NAME')}"
											 change="this.checkKeyId();card_default();" 
											 required="true" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_ISSUER_NAME')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_key_issuer.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_TYPE_NAME')}" verticalAlign="middle"/>
					<components:DKI_ValidatorComboBox id="kya_type" 
											 dataProvider="{lookupKeyType.lastResult}" 
											 labelField="type_name" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_type_name}" enabled.edit="false" 
											 selectedItem.create="" selectedIndex.create="{this.fltr_type.selectedIndex}" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_TYPE_NAME')}" 
											 change="changeFieldStates();card_default();" valueCommit="changeFieldStates()"
											 required="true" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_TYPE_NAME')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_type.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_PHYS_NAME')}" verticalAlign="middle"/>
					<components:DKI_ValidatorComboBox id="kya_phys_type" 
											 dataProvider="{lookupKeyPhysType.lastResult}" 
											 labelField="phys_type_name"
											 selectedItem.edit="{dataGrid.selectedItem.kya_phys_name}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="7" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" change="card_default();" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_PHYS_NAME')}"
											 required="true" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_PHYS_NAME')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_phys_type.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
			</s:HGroup>
			<s:Spacer height="{spaceHeight}" />
			<s:HGroup>
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_TXT')}" verticalAlign="middle"/>
					<components:DKI_ValidatorInput id="kya_txt" 
											  width="{
											     (kya_phys_type.selectedItem.phys_type_id!=2)?(fieldWidth-30):(fieldWidth)
											  }" 
											  height="{fieldHeight}" 
											  text.edit="{dataGrid.selectedItem.kya_txt}" 
											  editable.edit="true" text.create="" editable.create="true"
											  change="kya_txt_changeHandler(event)" keyUp="card_text_changeHandler(event)" 
											  enabled="{
											     (kya_phys_type.selectedItem.phys_type_id != 2)||
											     (kya_phys_type.selectedItem.phys_type_id == 2 &amp;&amp;
											      kya_key_no.text.length                  >= 1 &amp;&amp;
											      kya_key_issuer.selectedIndex            >= 0 &amp;&amp;
											      kya_type.selectedIndex                  >= 0)
											  }"
											  required="true" validationType="alphanumeric" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_TXT')}" 
											  />
					<s:Spacer width="-12" includeInLayout="{kya_phys_type.selectedItem.phys_type_id != 2}"/>
					<components:DKI_Button id="tagBtn" label="" width="30" height="{fieldHeight}" click="this.popupCardReaderDialog()" enabled="true" type="tag"
										   
										   visible         ="{kya_phys_type.selectedItem.phys_type_id != 2}"
										   includeInLayout ="{kya_phys_type.selectedItem.phys_type_id != 2}"/>
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_KEY_CREATED')}" verticalAlign="middle"/>
					<components:DKI_DateTime id="kya_key_created" enabled="false" 
												selectedDate.edit="{convertDateToLocale(dataGrid.selectedItem.kya_key_created)}" 
												selectedDate.create="{new Date()}" 
												width="{fieldWidth}" height="{fieldHeight}" timeEnabled="false"
												/>
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_TIMECODE')}" verticalAlign="middle"/>
					<components:DKI_ValidatorComboBox id="kya_timecode" 
											 dataProvider="{lookupKeyTimeCode.lastResult}" 
											 labelField="tcd_title" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_timecode}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="{(lookupKeyTimeCode.lastResult.length==1?0:-1)}" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_TIMECODE')}"
											 required="true" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_TIMECODE')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_timecode.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="  "/>
					<s:CheckBox width="{fieldWidth/2}" 
								label="{resourceManager.getString('default','KYA_LOCK')}" 
								fontWeight="bold" 
								id="kya_lock" 
								selected.edit="{dataGrid.selectedItem.kya_lock=='Y'?true:false}" 
								enabled.edit="true" selected.create="false" enabled.create="true"
								/>
					<s:CheckBox width="{fieldWidth/2}" 
								label="{resourceManager.getString('default','KYA_ADHOC')}" 
								fontWeight="bold" 
								id="kya_adhoc" 
								selected.edit="{dataGrid.selectedItem.kya_adhoc=='Y'?true:false}" 
								enabled.edit="true" selected.create="false" enabled.create="true"
								/>
				</s:HGroup>
			</s:HGroup>
			<s:Spacer height="{spaceHeight}" />
			<s:HGroup>
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_PIN')}" verticalAlign="middle"/>
					<components:DKI_ValidatorInput id="kya_pin" 
											  width="{fieldWidth}" height="{fieldHeight}" 
											  text.edit="{dataGrid.selectedItem.kya_pin}" 
											  editable.edit="false" 
											  text.create="" 
											  editable.create="false" displayAsPassword="true" 
											  enabled.edit="false" enabled.create="false"
											  required="false" validationType="integer" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_PIN')}" 
											  />
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_PIN_CHANGED')}" verticalAlign="middle"/>
					<components:DKI_DateTime id="kya_pin_changed" timeEnabled="false" enabled="false"
					selectedDate.edit="{convertDateToLocale(dataGrid.selectedItem.kya_pin_changed)}" 
					selectedDate.create="{new Date()}" 
					width="{fieldWidth}" height="{fieldHeight}"
					/>
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="  "/>
					<s:CheckBox width="{fieldWidth}" 
								label="{resourceManager.getString('default','KYA_RESET_PIN')}" 
								fontWeight="bold" 
								id="kya_reset_pin" 
								selected.edit="false" enabled.edit="true" 
								selected.create="false" enabled.create="false" 
								change="{this.kya_remove_pin.selected=(this.kya_reset_pin.selected==true?false:(this.kya_remove_pin.selected))}"
								/>
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="  "/>
					<s:CheckBox width="{fieldWidth}" 
								label="{resourceManager.getString('default','KYA_REMOVE_PIN')}" 
								fontWeight="bold" 
								id="kya_remove_pin" 
								selected.edit="false" enabled.edit="true" 
								selected.create="false" enabled.create="false"
								change="{this.kya_reset_pin.selected=(this.kya_remove_pin.selected==true?false:(this.kya_reset_pin.selected))}"
								/>
				</s:HGroup>
			</s:HGroup>
			<s:Spacer height="30" />
			<s:HGroup>
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_PSNL_CMPY_NAME')}" verticalAlign="middle"/>
					<components:DKI_ValidatorComboBox id="kya_psnl_cmpy" 
											 dataProvider="{lookupKeyEmployer.lastResult}" 
											 labelField="cmpy_name" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_psnl_cmpy_name}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_PSNL_CMPY_NAME')}"
											 change="adjustKeyPersonnel()" 
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_PSNL_CMPY_NAME')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_psnl_cmpy.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_ROLE_NAME')}" verticalAlign="middle"/>
					<components:DKI_ValidatorComboBox id="kya_role" 
											 dataProvider="{lookupKeyRole.lastResult}" 
											 labelField="role_name" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_role_name}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_ROLE_NAME')}"
											 change="adjustKeyPersonnel()" 
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_ROLE_NAME')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_role.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_PSNL_NAME')}" verticalAlign="middle"/>
					<components:DKI_ValidatorComboBox id="kya_personnel" 
											 dataProvider="{lookupKeyPsnl.lastResult}" 
											 labelField="psnl_name" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_psnl_name}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" requireSelection="false" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_PSNL_NAME')}"
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_PSNL_NAME')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_personnel.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_DRAW_NAME')}" verticalAlign="middle"/>
					<components:DKI_ValidatorComboBox id="kya_drawer" 
											 dataProvider="{lookupKeyDrawer.lastResult}" 
											 labelField="cmpy_name" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_draw_name}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_DRAW_NAME')}"
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_DRAW_NAME')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_drawer.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
			</s:HGroup>
			<s:Spacer height="{spaceHeight}" />
			<s:HGroup>
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_SUPP_NAME')}" verticalAlign="middle"/>
					<components:DKI_ValidatorComboBox id="kya_supplier" 
											 dataProvider="{lookupKeySupplier.lastResult}" 
											 labelField="cmpy_name" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_supp_name}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_SUPP_NAME')}"
											 change="adjustKeyTripOrCustomer()" 
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_SUPP_NAME')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_supplier.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_TRIP_NO')}" verticalAlign="middle" visible="{isKeyTypeIncluded(KEY_TYPE__LOAD)}"/>
					<components:DKI_ValidatorComboBox id="kya_trip_no" 
											 dataProvider.create="{lookupKeyTripNew.lastResult}" dataProvider.edit="{lookupKeyTrip.lastResult}" 
											 labelField="trip_no" visible="{isKeyTypeIncluded(KEY_TYPE__LOAD)}" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_trip_no}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_TRIP_NO')}"
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_TRIP_NO')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_supplier.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_SITE_NAME')}" verticalAlign="middle" visible="{isKeyTypeIncluded(KEY_TYPE__LOAD)}"/>
					<components:DKI_ValidatorComboBox id="kya_load_site" 
											 dataProvider="{lookupKeyTerminal.lastResult}" 
											 labelField="term_name" visible="{isKeyTypeIncluded(KEY_TYPE__LOAD)}" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_site_name}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_SITE_NAME')}"
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_SITE_NAME')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_load_site.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_LOAD_ID')}" verticalAlign="middle" visible="{isKeyTypeIncluded(KEY_TYPE__LOAD)}"/>
					<components:DKI_ValidatorInput id="kya_load_id" visible="{isKeyTypeIncluded(KEY_TYPE__LOAD)}" 
											  width="{fieldWidth}" height="{fieldHeight}" 
											  text.edit="{dataGrid.selectedItem.kya_load_id}" 
											  editable.edit="true" text.create="" editable.create="true"
											  required="false" validationType="integer" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_LOAD_ID')}" 
											  />
				</s:HGroup>
			</s:HGroup>
			<s:Spacer height="{spaceHeight}" />
			<s:HGroup>
				<s:HGroup>
					<!--s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_TNKR_CMPY_NAME')}" verticalAlign="middle"/-->
					<s:Button id="btn_kya_tnkr_cmpy" width="{labelWidth}" height="{labelHeight}" label="{this.carrierBtnTexts[this.carrierBtnIndex]}" click="{this.carrierBtnIndex = 1 - this.carrierBtnIndex; adjustKeyTanker()}" />
					<components:DKI_ValidatorComboBox id="kya_tnkr_cmpy" 
											 dataProvider="{lookupKeyCarrier.lastResult}" 
											 labelField="cmpy_name" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_tnkr_cmpy_name}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_TNKR_CMPY_NAME')}"
											 change="adjustKeyTanker()" 
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_TNKR_CMPY_NAME')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_tnkr_cmpy.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_TNKR_NAME')}" verticalAlign="middle"/>
					<components:DKI_ValidatorComboBox id="kya_tanker" 
											 dataProvider="{lookupKeyTnkr.lastResult}" 
											 labelField="tnkr_desc" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_tnkr_desc}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_TNKR_NAME')}"
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_TNKR_NAME')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_tanker.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_EQPT_CMPY_NAME')}" verticalAlign="middle"/>
					<components:DKI_ValidatorComboBox id="kya_eqpt_cmpy" 
											 dataProvider="{lookupKeyCarrier.lastResult}" 
											 labelField="cmpy_name" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_eqpt_cmpy_name}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_EQPT_CMPY_NAME')}"
											 change="adjustKeyEquipment()" 
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_EQPT_CMPY_NAME')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_eqpt_cmpy.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_EQPT_NAME')}" verticalAlign="middle"/>
					<components:DKI_ValidatorComboBox id="kya_equipment" 
											 dataProvider="{lookupKeyEqpt.lastResult}" 
											 labelField="eqpt_desc" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_eqpt_desc}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_EQPT_NAME')}"
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_EQPT_NAME')}" 
											 />
					<!--s:Label width="20" height="{labelHeight}" text="{kya_equipment.selectedIndex}" verticalAlign="middle"/-->
				</s:HGroup>
			</s:HGroup>
			<s:Spacer height="{spaceHeight}" />
			<s:HGroup>
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_ALLOC_TYPE_NAME')}" verticalAlign="middle" visible="{isKeyTypeIncluded(KEY_TYPE__ALLOCATION)}" />
					<components:DKI_ValidatorComboBox id="kya_alloc_type" 
											 dataProvider="{lookupKeyAllocType.lastResult}" 
											 labelField="alloc_type_name" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_alloc_type_name}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}" visible="{isKeyTypeIncluded(KEY_TYPE__ALLOCATION)}"  
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_ALLOC_TYPE_NAME')}"
											 change="adjustKeyAllocCompany()" 
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_ALLOC_TYPE_NAME')}" 
											 />
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_ALLOC_CMPY_NAME')}" verticalAlign="middle" visible="{isKeyTypeIncluded(KEY_TYPE__ALLOCATION)}" />
					<components:DKI_ValidatorComboBox id="kya_alloc_cmpy" 
											 dataProvider="{lookupKeyAllocCmpy.lastResult}" 
											 labelField="cmpy_name" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_alloc_cmpy_name}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}"   visible="{isKeyTypeIncluded(KEY_TYPE__ALLOCATION)}" 
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_ALLOC_CMPY_NAME')}"
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_ALLOC_CMPY_NAME')}" 
											 />
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_CUST_NAME')}" verticalAlign="middle" visible="{isKeyTypeIncluded(KEY_TYPE__DISTRIBUTION)}" />
					<components:DKI_ValidatorComboBox id="kya_cust_name" 
											 dataProvider="{lookupKeyCustomer.lastResult}" 
											 labelField="cust_cmpy_name" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_cust_name}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}"  visible="{isKeyTypeIncluded(KEY_TYPE__DISTRIBUTION)}"  
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_CUST_NAME')}"
											 change="adjustKeyOrder()" 
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_CUST_NAME')}" 
											 />
				</s:HGroup>
				<s:Spacer width="{spaceWidth}" />
				<s:HGroup>
					<s:Label width="{labelWidth}" height="{labelHeight}" text="{resourceManager.getString('default','KYA_CUST_ORDNO')}" verticalAlign="middle" visible="{isKeyTypeIncluded(KEY_TYPE__DISTRIBUTION)}" />
					<components:DKI_ValidatorComboBox id="kya_order_no" 
											 dataProvider="{lookupKeyOrder.lastResult}" 
											 labelField="order_desc" 
											 selectedItem.edit="{dataGrid.selectedItem.kya_order_desc}" enabled.edit="true" 
											 selectedItem.create="" selectedIndex.create="-1" enabled.create="true" 
											 width="{fieldWidth}" height="{fieldHeight}"  visible="{isKeyTypeIncluded(KEY_TYPE__DISTRIBUTION)}"   
											 prompt="{resourceManager.getString('default','SELECT')+resourceManager.getString('default','KYA_CUST_ORDNO')}"
											 required="false" validationGroup="{vg}" automationName="{resourceManager.getString('default','KYA_CUST_ORDNO')}" 
											 />
				</s:HGroup>
				
			</s:HGroup>
		</s:VGroup>
		
	
		<s:Spacer height="0" />
		
		<s:HGroup width="100%" paddingBottom="4" paddingTop="0" gap="5">
			<s:Spacer width="100%"/>
			<components:DKI_Button id="btn_delete" label="{resourceManager.getString('default','DELETE')}" height="100%" click="doDelete()" includeIn="edit" enabled="{this.canDelete}" type="delete"/>
			<components:DKI_Button id="btn_save" label.create="{resourceManager.getString('default','SAVE')}" label="{resourceManager.getString('default','UPDATE')}" height="100%" includeIn="edit,create" enabled.create="{this.canCreate}" enabled.edit="{this.canUpdate}" type.create="create" type.edit="edit"/>
			<components:DKI_Button id="btn_cancel" label="{resourceManager.getString('default','CANCEL')}" height="100%" click="cancel_clickHandler()" enabled="true" type="cancel"/>
		</s:HGroup>
	</s:Panel>
	
	
</s:VGroup>

