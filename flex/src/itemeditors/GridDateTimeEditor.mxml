<?xml version="1.0" encoding="utf-8"?>
<s:GridItemEditor xmlns:fx="http://ns.adobe.com/mxml/2009" 
				  xmlns:s="library://ns.adobe.com/flex/spark"   
				  xmlns:mx="library://ns.adobe.com/flex/mx"
				  xmlns:components="components.*"
				  creationComplete="creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import com.adobe.fiber.runtime.lib.DateTimeFunc;
			
			import dm.DM;
			import dm.utils.tools;
			
			import flash.globalization.LocaleID;
			
			import mx.collections.ArrayCollection;
			import mx.controls.DateField;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			import mx.utils.StringUtil;
			
			import spark.events.IndexChangeEvent;
			
			
			
			[Bindable] public var flag:Boolean=true;
			public var defval:Date=null;
			public var deftime:String="23:59:59";
			
			public function creationCompleteHandler(event:FlexEvent):void
			{
				deftime = global.getValueFromSiteConfigSettings( "SITE_DEFAULT_TIME_STRING" );
				
				if ( data )
				{
					if ( data.hasOwnProperty("ed_type_timeflag") )
					{
						if ( data.ed_type_timeflag == null )
						{
							flag = false;
						}
						else
						{
							flag = ( int(data.ed_type_timeflag) > 0 )? true:false;
						}
					}
					
					if ( data.hasOwnProperty("ed_type_defvalue") )
					{
						if ( data.ed_type_defvalue == null )
						{
							defval = null;
						}
						else
						{
							defval = convertDateToLocaleLong(data.ed_type_defvalue);
						}
					}
					
					if ( data[column.dataField] == null || data[column.dataField] == "" )
					{
						dt.selectedDate = defval;
					}
					else
					{
						dt.selectedDate = convertDateToLocaleLong( data[column.dataField] );
					}
				}
			}
			
			override public function set value(newValue:Object):void 
			{
				if ( data )
				{
					//dt.selectedDate = convertDateToLocaleLong( data[column.dataField] );
				}
			}
			
			override public function get value():Object 
			{
				if ( dt.selectedDate == null ) return "";
					
				var dt_string:String="";
				
				dt_string = global.convertDateTimeToIsoString( dt.selectedDate, dt.timeEnabled, deftime );
				
				return dt_string;
			}
			
			/* override public function setFocus():void 
			{
				dt.setFocus();
			} */
			
			
			public function convertDateToLocaleString(dt:String):String
			{
				var dt_string:String;
				var dt_date:Date = new Date();
				
				dt_string = ""; 
				if ((dt!=null) && (dt!='null') && (dt!=''))
				{
					dt_date = DateField.stringToDate(dt,"YYYY-MM-DD");
					dt_string = dateFormatter.format( dt_date);
				}
				//trace ("convertDateToLocale", dt, dt_date, dt_string);
				return dt_string;
			}
			
			public function convertDateToLocale(dt:String):Date
			{
				var dt_date:Date = new Date();
				
				if ((dt!=null) && (dt!='null') && (dt!=''))
				{
					dt_date = DateField.stringToDate(dt,"YYYY-MM-DD");
				}
				//trace ("convertDateToLocale", dt, dt_date, dt_string);
				return dt_date;
			}
			
			public function convertDateToLocaleLong(dt:String):Date
			{
				var dt_date:Date = new Date();
				
				if ((dt!=null) && (dt!='null') && (dt!=''))
				{
					//dt_date = DateField.stringToDate(dt,"YYYY-MM-DD HH:NN:SS");
					dt_date = DateTimeFunc.createDate(
						int(dt.substr(0, 4))
						, int(dt.substr(5, 2))
						, int(dt.substr(8, 2))
						, int(dt.substr(11, 2))
						, int(dt.substr(14, 2))
						, int(dt.substr(17, 2))
					);
				}
				//trace ("convertDateToLocale", dt, dt_date, dt_string);
				return dt_date;
			}
			
			
			public function getDefaultDate():Date
			{
				var value:String = global.getValueFromSiteConfigSettings( "SITE_DEFAULT_TNKR_EXPIRY" );
				
				if ( value == null )
				{
					value = "";
				}
				value = StringUtil.trim( value );
				
				var now_date:Date;
				var def_date:Date;
				
				if ( value.length > 0 && tools.isValueInteger(value)==false )
				{
					def_date = DateField.stringToDate( value,"YYYY-MM-DD" );
				}
				else
				{
					if ( value.length == 0 )
					{
						value = "-1";
					}
					now_date = new Date();
					def_date = DateTimeFunc.dateAdd( "d", int(value), now_date );
				}
				
				/* if ( value.length > 0 && value != "-1" )
				{
				def_date = DateField.stringToDate( value,"YYYY-MM-DD" );
				}
				else
				{
				now_date = new Date();
				def_date = DateTimeFunc.dateAdd( "d", -1, now_date );
				} */
				
				return def_date;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:DateTimeFormatter id="dateFormatter" locale="{LocaleID.DEFAULT}" dateStyle="short" timeStyle="none"/>
		<s:DateTimeFormatter id="dateConvert" dateTimePattern="yyyy-MM-dd"/>
		<s:DateTimeFormatter id="dateConvertLong" dateTimePattern="yyyy-MM-dd HH:mm:ss"/>
	</fx:Declarations>
	
	<components:DKI_DateTime id="dt" 
							 enabled="true" 
							 width="100%" height="100%" timeEnabled="{flag}" enableNull="true"
							 />
	
	
</s:GridItemEditor>