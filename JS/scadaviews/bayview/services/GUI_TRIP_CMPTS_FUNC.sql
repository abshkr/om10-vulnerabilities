create or replace 
FUNCTION GUI_TRIP_CMPTS(v_supp VARCHAR,v_tripNo VARCHAR) RETURN SYS_REFCURSOR IS
c1 SYS_REFCURSOR;
v_tanker VARCHAR2(40);
v_tnkr_etp NUMBER;
v_msg VARCHAR2(512);
BEGIN

SELECT
	SCHEDULE.SHL_TANKER
	,TANKERS.TNKR_ETP
INTO
	v_tanker
	,v_tnkr_etp
FROM
	SCHEDULE
	,TANKERS
WHERE
	TANKERS.TNKR_CODE = SCHEDULE.SHL_TANKER
	AND SCHEDULE.SHLS_TRIP_NO = v_tripNo
	AND SCHEDULE.SHLS_SUPP = v_supp;

--dbms_output.put_line('v_tanker='||v_tanker||';');
--dbms_output.put_line('v_tnkr_etp='||v_tnkr_etp||';');

OPEN c1 for
	SELECT
		et.EQPT_CODE
		,et.TNKR_CMPT_NO
		,sd.UNIT UNIT
		,et.TRAILERCOMP   TLR_CMPT
		,sd.PROD_CODE
		,sd.PROD_NAME
		,sd.SCHD_UNITS CMPT_UNITS
		,sd.SCHD_SPECQTY ALLOWED_QTY
		,0 LOAD_QTY
		,sd.SCHD_PRLDQTY PRELD_QTY
		,pr.PROD_NAME PREV_PROD
		,DECODE(sd.ORDER_CUST_ORDNO,0,NULL,sd.ORDER_CUST_ORDNO) ORDER_CUST_ORDNO
		,et.CMPT_CAPACIT
		,'' ORDER_REF_CODE
		,0.0 SCHORDER_QTY
		,DECODE(pr.PROD_CODE,'-1',NULL,pr.PROD_CODE) PREV_PRODCODE
		,et.TC_EQPT
		,sd.SHLSLOAD_LOAD_ID
		,sd.ARM_NAME
		,sd.ARMCODE
		,sd.ARM_NUMBER
		,sd.SCHD_DELIV_NUM
		,sd.SCHD_SOLD_TO_NUM
		,sd.SCHD_SHIP_TO_NUM
		,sd.PROD_CMPY_CODE
		,sd.PROD_CMPY_NAME
		,sd.PROD_COLOR
		,sd.PROD_TXT_COLOR
		,et.CMPT_UNITS  CMPT_UNIT_CODE
		,et.UNIT        CMPT_UNIT_DESC
	FROM
		(
			SELECT
					tc.TNKR_CMPT_NO
					,tc.TRAILERCOMP
					,NVL(sf.ADJ_AMNT,0) + tc.CMPT_CAPACIT CMPT_CAPACIT
					,tc.CMPT_UNITS
					,tc.UNIT
					,tc.EQPT_CODE
					,tc.TC_EQPT
			FROM
					(
					SELECT
							 ROWNUM TNKR_CMPT_NO
				, tc_tmp.*
			  FROM
				(
				SELECT
					 c.TRAILERCOMP
					,c.CMPT_CAPACIT
					,c.CMPT_UNITS
					,un.DESCRIPTION UNIT
					,te.TC_SEQNO
					,trs.EQPT_CODE
					,te.TC_EQPT
					,c.ETYP_ID_RT
					,te.TC_TANKER
				FROM
					TNKR_EQUIP te
					,TRANSP_EQUIP trs
					,UNIT_SCALE_VW un
					,CMPT_VW c
				WHERE
					te.TC_EQPT = trs.EQPT_ID
					AND trs.EQPT_ETP = C.ETYP_ID_RT
					AND un.UNIT_ID = c.CMPT_UNITS
					AND te.TC_TANKER = v_tanker
				ORDER BY te.TC_SEQNO,TO_NUMBER(c.TRAILERCOMP)
				) tc_tmp
					) tc,
					SFILL_ADJUST sf
			WHERE
					tc.TC_EQPT = sf.ADJ_EQP(+)
					AND tc.TRAILERCOMP = sf.ADJ_CMPT(+)
		ORDER BY TO_NUMBER(tc.TNKR_CMPT_NO)
		) et,
		(
		SELECT
			PRODUCTS.PROD_NAME
			,SPECDETS.SCHDPROD_PRODCODE PROD_CODE
			,SPECDETS.SCHD_TRAILER
			,SPECDETS.SCHD_TRAILERCOMP
			,SPECDETS.SCHD_COMP_ID
			,SPECDETS.SCHD_SPECQTY
			,SPECDETS.SCHD_UNITS
			,SPECDETS.SCHD_PRLDQTY
            ,SPECDETS.SCHD_DELIV_NUM
            ,SPECDETS.SCHD_SOLD_TO_NUM
            ,SPECDETS.SCHD_SHIP_TO_NUM
			,CUST_ORDER.ORDER_CUST_ORDNO
			,un.DESCRIPTION UNIT
			,SCHEDULE.SHLSLOAD_LOAD_ID
			,BA_ARMS.ARM_NAME
			,BA_ARMS.BAA_BAY_SEQ 		as ARM_NUMBER
			,SPECDETS.ARMCODE
			, PRODUCTS.PROD_CMPY		as PROD_CMPY_CODE
			, drwr.CMPY_NAME			as PROD_CMPY_NAME
			, PRODUCTS.PROD_BACK_COLOUR	as PROD_COLOR
			, PRODUCTS.PROD_TXT_COLOUR	as PROD_TXT_COLOR
		FROM
			SPECDETS
			,SCHEDULE
			,PRODUCTS
			,CUST_ORDER
			,unit_scale_vw un
			,BA_ARMS
			,COMPANYS drwr
		WHERE
			SPECDETS.SCHD_UNITS = un.UNIT_ID
			AND PRODUCTS.PROD_CODE = SPECDETS.SCHDPROD_PRODCODE
			AND PRODUCTS.PROD_CMPY = SPECDETS.SCHDPROD_PRODCMPY
			and PRODUCTS.PROD_CMPY = drwr.CMPY_CODE
			AND SCHEDULE.SHLS_TRIP_NO = SPECDETS.SCHDSPEC_SHLSTRIP
			AND SCHEDULE.SHLS_SUPP = SPECDETS.SCHDSPEC_SHLSSUPP
			AND CUST_ORDER.ORDER_NO(+) = SPECDETS.SCHD_ORDER
			AND SCHEDULE.SHLS_SUPP = v_supp
			AND SCHEDULE.SHLS_TRIP_NO = v_tripNo
			AND SPECDETS.ARMCODE = BA_ARMS.BAA_CODE(+)
		) sd,
		(
		SELECT
			PRODUCTS.PROD_NAME
			,SPECDETS.SCHD_TRAILER
			,SPECDETS.SCHD_TRAILERCOMP
			,SPECDETS.SCHD_COMP_ID
			,SPECDETS.SCHD_UNITS
			,PRODUCTS.PROD_CODE
		FROM
			SPECDETS
			,SCHEDULE
			,PRODUCTS
		WHERE
			PRODUCTS.PROD_CODE = SPECDETS.SCHDPROD_PRODCODE
			AND PRODUCTS.PROD_CMPY = SPECDETS.SCHDPROD_PRODCMPY
			AND SCHEDULE.SHLS_TRIP_NO = SPECDETS.SCHDSPEC_SHLSTRIP
			AND SCHEDULE.SHLS_SUPP = SPECDETS.SCHDSPEC_SHLSSUPP
			AND (SCHEDULE.SHLS_TRIP_NO ,SCHEDULE.SHLS_SUPP) =
				(
				SELECT * FROM
					(
					SELECT
						SCHEDULE.SHLS_TRIP_NO
						,SCHEDULE.SHLS_SUPP
					FROM
						LOADS
						,SCHEDULE
					WHERE
						LOADS.LD_TERMINAL = SCHEDULE.SHLSLOAD_LD_TRM
						AND LOADS.LOAD_ID = SCHEDULE.SHLSLOAD_LOAD_ID
						AND LOADS.LOAD_DMY < NVL(
							(
							SELECT
								LOADS.LOAD_DMY
							FROM
								LOADS
								,SCHEDULE
							WHERE
								LOADS.LD_TERMINAL = SCHEDULE.SHLSLOAD_LD_TRM
								AND LOADS.LOAD_ID = SCHEDULE.SHLSLOAD_LOAD_ID
								AND LOADS.LOAD_DMY IS NOT NULL
								AND SCHEDULE.SHLS_SUPP = v_supp
								AND SCHEDULE.SHL_TANKER = v_tanker
								AND SCHEDULE.SHLS_SUPP = v_supp
								AND SCHEDULE.SHLS_TRIP_NO = v_tripNo
							)
							,SYSDATE)
						AND LOADS.LOAD_DMY IS NOT NULL
						AND SCHEDULE.SHLS_SUPP = v_supp
						AND SCHEDULE.SHL_TANKER = v_tanker
					ORDER BY LOADS.LOAD_DMY DESC
					)
				WHERE ROWNUM = 1
				)
		)pr
	WHERE
			et.TNKR_CMPT_NO = sd.SCHD_COMP_ID(+)
		AND et.TNKR_CMPT_NO = pr.SCHD_COMP_ID(+)
	--	AND et.TNKR_CMPT_NO = ord.SCHO_DAD_SCHDCMPT(+)
	ORDER BY TO_NUMBER(et.TNKR_CMPT_NO )
	;

RETURN c1;

EXCEPTION WHEN OTHERS THEN
	v_msg := SQLERRM;
	OPEN c1 FOR
	SELECT v_msg as message FROM dual;
	RETURN c1;

END;